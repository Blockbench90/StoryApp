[{"C:\\React\\StoryApp\\client\\src\\index.js":"1","C:\\React\\StoryApp\\client\\src\\store\\store.ts":"2","C:\\React\\StoryApp\\client\\src\\App.tsx":"3","C:\\React\\StoryApp\\client\\src\\theme.jsx":"4","C:\\React\\StoryApp\\client\\src\\store\\saga.ts":"5","C:\\React\\StoryApp\\client\\src\\store\\types.ts":"6","C:\\React\\StoryApp\\client\\src\\store\\reducers\\story\\reducer.ts":"7","C:\\React\\StoryApp\\client\\src\\store\\reducers\\users\\reducer.ts":"8","C:\\React\\StoryApp\\client\\src\\store\\reducers\\stories\\reducer.ts":"9","C:\\React\\StoryApp\\client\\src\\store\\reducers\\users\\selectors.ts":"10","C:\\React\\StoryApp\\client\\src\\store\\reducers\\users\\actionCreators.ts":"11","C:\\React\\StoryApp\\client\\src\\pages\\SingIn\\theme.ts":"12","C:\\React\\StoryApp\\client\\src\\pages\\Layout.tsx":"13","C:\\React\\StoryApp\\client\\src\\pages\\Home\\Home.tsx":"14","C:\\React\\StoryApp\\client\\src\\store\\reducers\\users\\saga.ts":"15","C:\\React\\StoryApp\\client\\src\\store\\reducers\\story\\saga.ts":"16","C:\\React\\StoryApp\\client\\src\\store\\reducers\\stories\\sagas.ts":"17","C:\\React\\StoryApp\\client\\src\\store\\reducers\\stories\\actionCreators.ts":"18","C:\\React\\StoryApp\\client\\src\\store\\reducers\\story\\actionCreators.ts":"19","C:\\React\\StoryApp\\client\\src\\pages\\SingIn\\index.tsx":"20","C:\\React\\StoryApp\\client\\src\\restApi\\userApi.ts":"21","C:\\React\\StoryApp\\client\\src\\restApi\\storiesApi.ts":"22","C:\\React\\StoryApp\\client\\src\\pages\\SingIn\\components\\RegistrationModal.tsx":"23","C:\\React\\StoryApp\\client\\src\\pages\\SingIn\\components\\LoginModal.tsx":"24","C:\\React\\StoryApp\\client\\src\\restApi\\axios.ts":"25","C:\\React\\StoryApp\\client\\src\\store\\reducers\\stories\\selectors.ts":"26","C:\\React\\StoryApp\\client\\src\\pages\\Home\\theme.ts":"27","C:\\React\\StoryApp\\client\\src\\componetns\\ModalBlock.tsx":"28","C:\\React\\StoryApp\\client\\src\\componetns\\ScrollButton.tsx":"29","C:\\React\\StoryApp\\client\\src\\componetns\\FullStory.tsx":"30","C:\\React\\StoryApp\\client\\src\\componetns\\ModalMenu.tsx":"31","C:\\React\\StoryApp\\client\\src\\componetns\\Story.tsx":"32","C:\\React\\StoryApp\\client\\src\\utils\\BackButton.tsx":"33","C:\\React\\StoryApp\\client\\src\\store\\reducers\\story\\selectors.ts":"34","C:\\React\\StoryApp\\client\\src\\utils\\formatDate.ts":"35","C:\\React\\StoryApp\\client\\src\\componetns\\AddStoryForm.tsx":"36","C:\\React\\StoryApp\\client\\src\\componetns\\ProfileStory.tsx":"37","C:\\React\\StoryApp\\client\\src\\componetns\\ProfileAvatar.tsx":"38","C:\\React\\StoryApp\\client\\src\\pages\\Home\\RightSide.tsx":"39","C:\\React\\StoryApp\\client\\src\\componetns\\HeaderMenu.tsx":"40","C:\\React\\StoryApp\\client\\src\\componetns\\SearchTextField.tsx":"41","C:\\React\\StoryApp\\client\\src\\pages\\Profile\\index.tsx":"42","C:\\React\\StoryApp\\client\\src\\pages\\Profile\\ProfileStyle.ts":"43","C:\\React\\StoryApp\\client\\src\\pages\\Profile\\ProfileStories.tsx":"44","C:\\React\\StoryApp\\client\\src\\pages\\Profile\\ProfileInfo.tsx":"45"},{"size":794,"mtime":1609154506328,"results":"46","hashOfConfig":"47"},{"size":1056,"mtime":1609154506341,"results":"48","hashOfConfig":"47"},{"size":2505,"mtime":1609162689835,"results":"49","hashOfConfig":"47"},{"size":2542,"mtime":1609154506341,"results":"50","hashOfConfig":"47"},{"size":295,"mtime":1609154506340,"results":"51","hashOfConfig":"47"},{"size":179,"mtime":1609154506341,"results":"52","hashOfConfig":"47"},{"size":1904,"mtime":1609154506337,"results":"53","hashOfConfig":"47"},{"size":2245,"mtime":1609257473969,"results":"54","hashOfConfig":"47"},{"size":2340,"mtime":1609154506336,"results":"55","hashOfConfig":"47"},{"size":1681,"mtime":1609170102055,"results":"56","hashOfConfig":"47"},{"size":4183,"mtime":1609246362114,"results":"57","hashOfConfig":"47"},{"size":1746,"mtime":1609154506333,"results":"58","hashOfConfig":"47"},{"size":1245,"mtime":1609154506330,"results":"59","hashOfConfig":"47"},{"size":3455,"mtime":1609154506328,"results":"60","hashOfConfig":"47"},{"size":4100,"mtime":1609246362163,"results":"61","hashOfConfig":"47"},{"size":1995,"mtime":1609154506337,"results":"62","hashOfConfig":"47"},{"size":1425,"mtime":1609163169837,"results":"63","hashOfConfig":"47"},{"size":3319,"mtime":1609154506335,"results":"64","hashOfConfig":"47"},{"size":2916,"mtime":1609154506337,"results":"65","hashOfConfig":"47"},{"size":2593,"mtime":1609154506332,"results":"66","hashOfConfig":"47"},{"size":1790,"mtime":1609257557316,"results":"67","hashOfConfig":"47"},{"size":1072,"mtime":1609154506334,"results":"68","hashOfConfig":"47"},{"size":7782,"mtime":1609154506332,"results":"69","hashOfConfig":"47"},{"size":4924,"mtime":1609154506331,"results":"70","hashOfConfig":"47"},{"size":255,"mtime":1609154506333,"results":"71","hashOfConfig":"47"},{"size":1344,"mtime":1609154506336,"results":"72","hashOfConfig":"47"},{"size":7519,"mtime":1609154506329,"results":"73","hashOfConfig":"47"},{"size":1285,"mtime":1609154506323,"results":"74","hashOfConfig":"47"},{"size":2244,"mtime":1609154506325,"results":"75","hashOfConfig":"47"},{"size":6594,"mtime":1609154506322,"results":"76","hashOfConfig":"47"},{"size":1411,"mtime":1609154506324,"results":"77","hashOfConfig":"47"},{"size":6191,"mtime":1609154506326,"results":"78","hashOfConfig":"47"},{"size":533,"mtime":1609154506342,"results":"79","hashOfConfig":"47"},{"size":1173,"mtime":1609154506338,"results":"80","hashOfConfig":"47"},{"size":235,"mtime":1609154506342,"results":"81","hashOfConfig":"47"},{"size":8078,"mtime":1609171692263,"results":"82","hashOfConfig":"47"},{"size":5940,"mtime":1609257863483,"results":"83","hashOfConfig":"47"},{"size":3940,"mtime":1609176729187,"results":"84","hashOfConfig":"47"},{"size":5020,"mtime":1609154506329,"results":"85","hashOfConfig":"47"},{"size":7670,"mtime":1609154506323,"results":"86","hashOfConfig":"47"},{"size":1014,"mtime":1609154506326,"results":"87","hashOfConfig":"47"},{"size":1379,"mtime":1609257266056,"results":"88","hashOfConfig":"47"},{"size":5198,"mtime":1609180994085,"results":"89","hashOfConfig":"47"},{"size":1502,"mtime":1609173112172,"results":"90","hashOfConfig":"47"},{"size":3112,"mtime":1609174584152,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"w0zgde",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"97"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"97"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"97"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"97"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"C:\\React\\StoryApp\\client\\src\\index.js",[],["197","198"],"C:\\React\\StoryApp\\client\\src\\store\\store.ts",[],["199","200"],"C:\\React\\StoryApp\\client\\src\\App.tsx",["201"],"import React, {useEffect} from 'react';\r\nimport {Route, Switch, useHistory} from 'react-router-dom'\r\nimport {SignIn} from \"./pages/SingIn\";\r\nimport Layout from \"./pages/Layout\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Index} from \"./pages/Profile\";\r\nimport {Home} from \"./pages/Home/Home\";\r\nimport {useStylesSignIn} from \"./pages/SingIn/theme\";\r\nimport ImportContactsOutlinedIcon from \"@material-ui/icons/ImportContactsOutlined\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {selectUserIsAuth, selectUserStatus} from \"./store/reducers/users/selectors\";\r\nimport {LoadingStatus} from \"./store/types\";\r\nimport {FetchAuthAC} from \"./store/reducers/users/actionCreators\";\r\n\r\n\r\n//TODO: выяснить, почему не компилится когда есть tsconfig, и какого черта он постоянно создается\r\n//подтянуть информацию о пользователе, в общем страница пользователя и подкоректировать бэк\r\nconst App = () => {\r\n    const classes = useStylesSignIn()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(selectUserIsAuth)\r\n    const loadingStatus = useSelector(selectUserStatus)\r\n    //говорит о полной готовности загрузки\r\n    const isReady = loadingStatus !== LoadingStatus.NEVER && loadingStatus !== LoadingStatus.LOADING\r\n\r\n    useEffect(() => {\r\n        //запрос на логинизацию\r\n        dispatch(FetchAuthAC());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        //если и дата прилетела и статусы поменялись\r\n        (!isAuth && isReady) ? history.push('/signin') : history.push('/home')\r\n    }, [isAuth, isReady]);\r\n\r\n    if (!isReady) {\r\n        return (\r\n            <div className={classes.loadingApp}>\r\n                <ImportContactsOutlinedIcon className={classes.loadingIcon} aria-label=\"\" color=\"secondary\"/>\r\n                <CircularProgress className={classes.loadingStatusBar}/>\r\n            </div>)\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Switch>\r\n                <Route path=\"/signin\" component={SignIn} exact/>\r\n                <Layout>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/profile\" component={Index}/>\r\n                </Layout>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","C:\\React\\StoryApp\\client\\src\\theme.jsx",[],"C:\\React\\StoryApp\\client\\src\\store\\saga.ts",[],"C:\\React\\StoryApp\\client\\src\\store\\types.ts",[],"C:\\React\\StoryApp\\client\\src\\store\\reducers\\story\\reducer.ts",[],"C:\\React\\StoryApp\\client\\src\\store\\reducers\\users\\reducer.ts",["202"],"import produce, {Draft} from \"immer\";\r\nimport {LoadingStatus} from \"../../types\";\r\nimport {UserActions, UserActionsType} from \"./actionCreators\";\r\nimport {Story} from \"../stories/reducer\";\r\n\r\nexport interface User {\r\n    _id: string\r\n    email: string\r\n    fullname: string\r\n    username: string\r\n    password: string\r\n    confirmHash: string\r\n    confirmed?: boolean\r\n    location?: string\r\n    about?: string\r\n    website?: string\r\n}\r\n\r\nexport interface UserState {\r\n    data?: User | undefined\r\n    stories: Story[]\r\n    storiesLoading: LoadingStatus\r\n    status: LoadingStatus\r\n}\r\nconst data = {\r\n    _id: '',\r\n    email: '',\r\n    fullname: '',\r\n    username: '',\r\n    password: '',\r\n    confirmHash: '',\r\n    confirmed: false,\r\n    location: '',\r\n    about: '',\r\n    website: ''\r\n}\r\n\r\nconst initialState: UserState = {\r\n    data: undefined,\r\n    stories: [],\r\n    storiesLoading: LoadingStatus.NEVER,\r\n    status: LoadingStatus.NEVER,\r\n}\r\n\r\n//редьюсер пользователя\r\nexport const userReducer = produce((draft: Draft<UserState>, action: UserActions) => {\r\n    switch (action.type) {\r\n        //на случай успешной логинизации, вернет статус \"success\" и данные на юзера\r\n        case UserActionsType.SET_USER_DATA:\r\n            draft.data = action.payload\r\n            draft.status = LoadingStatus.SUCCESS\r\n            break\r\n        //начать запрос на все истории юзера\r\n        case UserActionsType.FETCH_ALL_USER_STORIES:\r\n            draft.stories = []\r\n            break\r\n        //засетать все истории юзера\r\n        case UserActionsType.SET_ALL_USER_STORIES:\r\n            draft.stories = action.payload\r\n            draft.storiesLoading = LoadingStatus.LOADED\r\n            break\r\n        //установка статуса\r\n        case UserActionsType.SET_LOADING_STATUS_STATE:\r\n            draft.status = action.payload\r\n            break\r\n        //установка статуса загрузки историй\r\n        case UserActionsType.SET_LOADING_STATUS_STORIES:\r\n            draft.storiesLoading = action.payload\r\n            break\r\n\r\n        default:\r\n            break\r\n    }\r\n}, initialState)\r\n","C:\\React\\StoryApp\\client\\src\\store\\reducers\\stories\\reducer.ts",[],"C:\\React\\StoryApp\\client\\src\\store\\reducers\\users\\selectors.ts",["203"],"import {RootState} from \"../../store\";\r\nimport {User, UserState} from \"./reducer\";\r\nimport {LoadingStatus} from \"../../types\";\r\n\r\n//state user полностью\r\nexport const selectUserState = (state: RootState): UserState => state.user\r\n\r\n//только дата\r\nexport const selectUserData = (state: RootState): UserState['data'] => selectUserState(state).data\r\n\r\n//достать id пользователя\r\nexport const selectUserDataID = (state: RootState): string => selectUserState(state).data._id\r\n\r\n//только истории\r\nexport const selectUserStories = (state: RootState): UserState['stories'] => selectUserState(state).stories\r\n\r\n//только статус\r\nexport const selectUserStatus = (state: RootState): UserState['status'] => selectUserState(state).status\r\n\r\n//булево значинеи, наличия данных в дате\r\nexport const selectUserIsAuth = (state: RootState): boolean => !!selectUserState(state).data\r\n\r\n//булево значинеи, наличия данных в историях юзера\r\nexport const selectUserDataStories = (state: RootState): boolean => !!selectUserState(state).stories\r\n\r\n//булево значение, если статус загрузки назодиться в \"ЗАГРУЗКА\\LOADING\\ЗАГРУЖАЕТСЯ\"\r\nexport const selectUserIsLoading = (state: RootState): boolean =>\r\n    selectUserState(state).status === LoadingStatus.LOADING\r\n\r\n//булево значение, если статус загрузки назодиться в \"ЗАГРУЖЕН\\LOADED\"\r\nexport const selectUserIsLoaded = (state: RootState): boolean =>\r\n    selectUserState(state).status === LoadingStatus.LOADED","C:\\React\\StoryApp\\client\\src\\store\\reducers\\users\\actionCreators.ts",[],"C:\\React\\StoryApp\\client\\src\\pages\\SingIn\\theme.ts",[],"C:\\React\\StoryApp\\client\\src\\pages\\Layout.tsx",["204"],"import React, {useEffect} from 'react';\r\nimport {Container, Grid} from '@material-ui/core';\r\nimport {HeaderMenu} from \"../componetns/HeaderMenu\";\r\nimport {useHomeStyles} from \"./Home/theme\";\r\nimport RightSide from \"./Home/RightSide\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {fetchStoriesAC} from \"../store/reducers/stories/actionCreators\";\r\ninterface Layout {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Layout: React.FC<Layout> = ({children}): React.ReactElement => {\r\n    const dispatch = useDispatch()\r\n    const classes = useHomeStyles()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchStoriesAC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.wrapper}>\r\n            {/*spacing - расстояние между блоками гридов*/}\r\n            <Grid container spacing={2}>\r\n                <Grid xs={12} item>\r\n                    <HeaderMenu classes={classes}/>\r\n                </Grid>\r\n\r\n                <Grid xs={11} item>\r\n                    {children}\r\n                </Grid>\r\n\r\n                <Grid xs={1} item>\r\n                    <RightSide classes={classes}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\nexport default Layout\r\n","C:\\React\\StoryApp\\client\\src\\pages\\Home\\Home.tsx",["205"],"import React, {useEffect} from 'react'\r\nimport {Paper, Typography} from \"@material-ui/core\"\r\nimport {AddStoryForm} from \"../../componetns/AddStoryForm\"\r\nimport {Story} from \"../../componetns/Story\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport ModalMenu from \"../../componetns/ModalMenu\"\r\nimport BackButton from \"../../utils/BackButton\"\r\nimport {Route} from \"react-router-dom\"\r\nimport {FullStory} from \"../../componetns/FullStory\"\r\nimport {useHomeStyles} from \"./theme\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport ScrollButton from \"../../componetns/ScrollButton\"\r\nimport {selectIsStoriesLoaded, selectStoriesItems} from \"../../store/reducers/stories/selectors\"\r\nimport {fetchStoriesAC} from \"../../store/reducers/stories/actionCreators\"\r\n\r\n\r\nexport const Home: React.FC = (): React.ReactElement => {\r\n    const classes = useHomeStyles()\r\n    const dispatch = useDispatch()\r\n    const stories = useSelector(selectStoriesItems)\r\n    const isLoading = useSelector(selectIsStoriesLoaded)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchStoriesAC())\r\n    }, [dispatch])\r\n    return (\r\n        <ScrollButton>\r\n            <Paper className={classes.storyWrapper} variant=\"outlined\">\r\n                <Paper>\r\n                    <div className={classes.menuHeader}>\r\n\r\n                        <div style={{display: 'flex'}}>\r\n                            <Route path=\"/home/:any\">\r\n                                <BackButton/>\r\n                            </Route>\r\n\r\n                            <Route path={['/home', '/home/search']} exact>\r\n                                <Paper variant=\"outlined\" className={classes.storyHeader}>\r\n                                    <Typography variant=\"h6\">Главная</Typography>\r\n                                </Paper>\r\n                            </Route>\r\n\r\n                            <Route path=\"/home/stories/:id\">\r\n                                <Paper className={classes.storyHeader} style={{marginLeft: -14}}>\r\n                                    <Typography variant=\"h6\">Story</Typography>\r\n                                </Paper>\r\n                            </Route>\r\n                        </div>\r\n\r\n                        <div className={classes.modalMenu}>\r\n                            <Paper>\r\n                                <ModalMenu/>\r\n                            </Paper>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Paper>\r\n\r\n                {/*<Route path={['/home', '/home/search']} exact>*/}\r\n                {/*    <Paper>*/}\r\n                {/*        <div className={classes.addForm}>*/}\r\n                {/*            <AddStoryForm classes={classes}/>*/}\r\n                {/*        </div>*/}\r\n                {/*        <div className={classes.addFormBottomLine}/>*/}\r\n                {/*    </Paper>*/}\r\n                {/*</Route>*/}\r\n\r\n                <Route path=\"/home\" exact>\r\n                    {isLoading\r\n                        ? (stories.map((obj) => (\r\n                            <Story key={obj._id} classes={classes} {...obj}/>\r\n                        )))\r\n                        : (<div className={classes.storyCentred}>\r\n                            <CircularProgress/>\r\n                        </div>)}\r\n                </Route>\r\n                <Route path='/home/stories/:id' render={() => <FullStory/>} exact/>\r\n            </Paper>\r\n        </ScrollButton>\r\n    )\r\n}\r\n\r\n","C:\\React\\StoryApp\\client\\src\\store\\reducers\\users\\saga.ts",[],"C:\\React\\StoryApp\\client\\src\\store\\reducers\\story\\saga.ts",[],"C:\\React\\StoryApp\\client\\src\\store\\reducers\\stories\\sagas.ts",[],"C:\\React\\StoryApp\\client\\src\\store\\reducers\\stories\\actionCreators.ts",["206"],"import {Action} from \"redux\";\r\nimport {LoadingStatus} from \"../../types\";\r\nimport {StoryState} from \"../story/reducer\";\r\nimport {AddFormState, NewStory, StoriesState} from \"./reducer\";\r\n\r\nexport enum StoriesActionsTypes {\r\n    FETCH_ALL_STORIES = 'stories/FETCH_ALL_STORIES',\r\n    SET_ALL_STORIES = 'stories/SET_ALL_STORIES',\r\n    FETCH_ADD_STORY = 'stories/FETCH_ADD_STORY',\r\n    SET_ADD_NEW_STORY = 'stories/SET_ADD_NEW_STORY',\r\n    SET_STORIES_LOADING_STATE = 'stories/SET_STORIES_LOADING_STATE',\r\n    SET_ADD_FORM_STATE = 'stories/SET_ADD_FORM_STATE',\r\n}\r\n\r\n//обнулить истории, установив пустой массив, и поставить статус \"загружается\"\r\n//запустить сагу для загрузки историй\r\nexport interface FetchStoriesAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.FETCH_ALL_STORIES;\r\n}\r\nexport const fetchStoriesAC = (): FetchStoriesAI => ({\r\n    type: StoriesActionsTypes.FETCH_ALL_STORIES,\r\n})\r\n//засетать все прилитевшие истории из саги в стейт\r\nexport interface SetAllStoriesAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.SET_ALL_STORIES,\r\n    payload: StoriesState['items']\r\n}\r\nexport const setAllStoriesAC = (payload: StoriesState['items']): SetAllStoriesAI => ({\r\n    type: StoriesActionsTypes.SET_ALL_STORIES,\r\n    payload\r\n})\r\n\r\n//добавление новой сторис, запуск саги, и установка статуса \"загрузка\"\r\nexport interface FetchAddStoryAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.FETCH_ADD_STORY;\r\n    payload: NewStory;\r\n}\r\nexport const fetchAddStoryAC = (payload: NewStory): FetchAddStoryAI => ({\r\n    type: StoriesActionsTypes.FETCH_ADD_STORY,\r\n    payload,\r\n});\r\n//Создать новую историю\r\nexport interface CreateNewStoryAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.SET_ADD_NEW_STORY,\r\n    payload: NewStory;\r\n}\r\nexport const createNewStoryAC = (payload: NewStory): CreateNewStoryAI => ({\r\n    type: StoriesActionsTypes.SET_ADD_NEW_STORY,\r\n    payload\r\n})\r\n\r\n//установить статус загрузки историй, к примеру ошибка в саге при загрузке\r\nexport interface SetStoriesLoadingStatusAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.SET_STORIES_LOADING_STATE;\r\n    payload: LoadingStatus;\r\n}\r\nexport const setStoriesLoadingStatusAC = (payload: LoadingStatus): SetStoriesLoadingStatusAI => ({\r\n    type: StoriesActionsTypes.SET_STORIES_LOADING_STATE,\r\n    payload,\r\n})\r\n//статус добавление истории через форму заполнения, к примеру ошибка в саге при загрузке\r\nexport interface SetAddFormStateAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.SET_ADD_FORM_STATE;\r\n    payload: AddFormState;\r\n}\r\nexport const setAddFormStateAC = (payload: AddFormState): SetAddFormStateAI => ({\r\n    type: StoriesActionsTypes.SET_ADD_FORM_STATE,\r\n    payload,\r\n});\r\n\r\n\r\n\r\n\r\nexport type StoriesActions =\r\n    | FetchStoriesAI\r\n    | SetAllStoriesAI\r\n    | CreateNewStoryAI\r\n    | SetStoriesLoadingStatusAI\r\n    | SetAddFormStateAI\r\n    | FetchAddStoryAI\r\n\r\n","C:\\React\\StoryApp\\client\\src\\store\\reducers\\story\\actionCreators.ts",[],"C:\\React\\StoryApp\\client\\src\\pages\\SingIn\\index.tsx",[],"C:\\React\\StoryApp\\client\\src\\restApi\\userApi.ts",[],"C:\\React\\StoryApp\\client\\src\\restApi\\storiesApi.ts",[],"C:\\React\\StoryApp\\client\\src\\pages\\SingIn\\components\\RegistrationModal.tsx",["207","208"],"import React from \"react\";\r\nimport {ModalBlock} from \"../../../componetns/ModalBlock\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {useStylesSignIn} from \"../theme\";\r\nimport {Notification} from \"../../../componetns/Notification\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport {FetchRegistrationAC} from \"../../../store/reducers/users/actionCreators\";\r\nimport {Color} from \"@material-ui/lab/Alert\";\r\nimport {selectUserStatus} from \"../../../store/reducers/users/selectors\";\r\nimport {LoadingStatus} from \"../../../store/types\";\r\n\r\ninterface RegisterModalProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nexport interface RegisterFormProps {\r\n    fullname: string;\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    password2: string;\r\n}\r\n\r\nconst RegisterFormSchema = yup.object().shape({\r\n    fullname: yup.string().required('Введите своё имя'),\r\n    email: yup.string().email('Неверная почта').required('Введите почту'),\r\n    username: yup.string().required('Введите логин'),\r\n    password: yup.string().min(6, '​Минимальная длина пароля 6 символов').required(),\r\n    password2: yup.string().oneOf([yup.ref('password')], 'Пароли не соответствуют'),\r\n});\r\n\r\n// сделать поля tached\r\n//После регистрации бросает сразу на главную, подумать и исправить, там еще нет ни историй, ни токена\r\n//а он положен, только верифицированным пользователям\r\n//На беке сделать переадрисацию на почтовый ящик и правильное закрытие модального окна\r\n{/*БЛОК \"РЕГИСТРАЦИИ\"*/\r\n}\r\nconst RegistrationModal: React.FC<RegisterModalProps> = ({open, onClose}): React.ReactElement => {\r\n    const classes = useStylesSignIn();\r\n    const dispatch = useDispatch();\r\n    const openNotificationRef = React.useRef<(text: string, type: Color) => void>(() => {\r\n    });\r\n    const loadingStatus = useSelector(selectUserStatus);\r\n\r\n    const {control, handleSubmit, errors} = useForm<RegisterFormProps>({\r\n        resolver: yupResolver(RegisterFormSchema)\r\n    });\r\n\r\n    const onSubmit = async (data: RegisterFormProps) => {\r\n        dispatch(FetchRegistrationAC(data));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (loadingStatus === LoadingStatus.SUCCESS) {\r\n            openNotificationRef.current('Регистрация успешна!', 'success');\r\n            onClose();\r\n        } else if (loadingStatus === LoadingStatus.ERROR) {\r\n            openNotificationRef.current('Ошибка при регистрации!', 'error');\r\n        }\r\n    }, [loadingStatus, onClose]);\r\n\r\n    return (\r\n        <ModalBlock\r\n            visible={open}\r\n            onClose={onClose}\r\n            classes={classes}\r\n            title=\"Войти в аккаунт\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <FormControl className={classes.loginFormControl} component=\"fieldset\" fullWidth>\r\n                    <FormGroup aria-label=\"position\" row>\r\n                        <Controller\r\n                            as={TextField}\r\n                            control={control}\r\n                            name=\"email\"\r\n                            className={classes.registerField}\r\n                            id=\"email\"\r\n                            label=\"E-Mail\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            type=\"email\"\r\n                            defaultValue=\"\"\r\n                            helperText={errors.email?.message}\r\n                            error={!!errors.email}\r\n                            fullWidth\r\n                            autoFocus\r\n                        />\r\n                        <Controller\r\n                            as={TextField}\r\n                            control={control}\r\n                            name=\"username\"\r\n                            className={classes.registerField}\r\n                            id=\"username\"\r\n                            label=\"Логин\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            type=\"text\"\r\n                            defaultValue=\"\"\r\n                            helperText={errors.username?.message}\r\n                            error={!!errors.username}\r\n                            fullWidth\r\n                        />\r\n                        <Controller\r\n                            as={TextField}\r\n                            control={control}\r\n                            name=\"fullname\"\r\n                            className={classes.registerField}\r\n                            id=\"fullname\"\r\n                            label=\"Ваше имя\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            type=\"text\"\r\n                            defaultValue=\"\"\r\n                            helperText={errors.fullname?.message}\r\n                            error={!!errors.fullname}\r\n                            fullWidth\r\n                        />\r\n                        <Controller\r\n                            as={TextField}\r\n                            control={control}\r\n                            name=\"password\"\r\n                            className={classes.registerField}\r\n                            id=\"password\"\r\n                            label=\"Пароль\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            type=\"password\"\r\n                            defaultValue=\"\"\r\n                            helperText={errors.password?.message}\r\n                            error={!!errors.password}\r\n                            fullWidth\r\n                        />\r\n                        <Controller\r\n                            as={TextField}\r\n                            control={control}\r\n                            name=\"password2\"\r\n                            className={classes.registerField}\r\n                            id=\"password2\"\r\n                            label=\"Пароль\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            type=\"password\"\r\n                            defaultValue=\"\"\r\n                            helperText={errors.password2?.message}\r\n                            error={!!errors.password2}\r\n                            fullWidth\r\n                        />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                            Регистрация\r\n                        </Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </ModalBlock>\r\n    )\r\n}\r\n\r\nexport default RegistrationModal","C:\\React\\StoryApp\\client\\src\\pages\\SingIn\\components\\LoginModal.tsx",[],"C:\\React\\StoryApp\\client\\src\\restApi\\axios.ts",[],"C:\\React\\StoryApp\\client\\src\\store\\reducers\\stories\\selectors.ts",[],"C:\\React\\StoryApp\\client\\src\\pages\\Home\\theme.ts",[],"C:\\React\\StoryApp\\client\\src\\componetns\\ModalBlock.tsx",[],"C:\\React\\StoryApp\\client\\src\\componetns\\ScrollButton.tsx",[],"C:\\React\\StoryApp\\client\\src\\componetns\\FullStory.tsx",[],"C:\\React\\StoryApp\\client\\src\\componetns\\ModalMenu.tsx",[],"C:\\React\\StoryApp\\client\\src\\componetns\\Story.tsx",["209"],"import React, {useState} from \"react\"\r\nimport {useHistory} from 'react-router-dom'\r\nimport classNames from \"classnames\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport {Avatar, IconButton, Menu, MenuItem, Typography} from \"@material-ui/core\"\r\nimport CommentIcon from \"@material-ui/icons/RateReview\"\r\nimport RepostIcon from \"@material-ui/icons/Repeat\"\r\nimport LikeIcon from \"@material-ui/icons/FavoriteBorderOutlined\"\r\nimport ShareIcon from \"@material-ui/icons/OpenInBrowserOutlined\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport {formatDate} from \"../utils/formatDate\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {deleteStoryByIdAC, fetchEditStoryAC} from \"../store/reducers/story/actionCreators\"\r\n// @ts-ignore\r\nimport Ava from '../assets/som_logo.jpg'\r\nimport {useHomeStyles} from \"../pages/Home/theme\"\r\nimport {useProfileStyles} from \"../pages/Index/ProfileStyle\";\r\n\r\n\r\ninterface StoryProps {\r\n    _id: string\r\n    title?: string | undefined\r\n    text: string\r\n    classes: ReturnType<typeof useHomeStyles>\r\n    createdAt: string\r\n    user: {\r\n        fullname: string\r\n        username: string\r\n        avatarUrl?: string\r\n    }\r\n}\r\n\r\nexport const Story: React.FC<StoryProps> = ({_id, title, text, user, classes, createdAt}: StoryProps): React.ReactElement => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    //для доп-меню\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClickStory = (event: React.MouseEvent<HTMLAnchorElement>): void => {\r\n        event.preventDefault();\r\n        history.push(`/home/stories/${_id}`);\r\n    }\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleClickEdit = () => {\r\n        dispatch(fetchEditStoryAC(_id))\r\n        handleClose()\r\n    }\r\n\r\n    const handleClickDelete = () => {\r\n        dispatch(deleteStoryByIdAC(_id))\r\n        handleClose()\r\n    }\r\n\r\n    return (user && (<div>\r\n                <Paper variant=\"outlined\" className={classNames(classes.story, classes.storyHeader)}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={1}>\r\n                            <Avatar className={classes.storyAvatar} alt={`Аватарка пользователя`}\r\n                                // прикрутить user.avatarUrl\r\n                                    src={Ava}/>\r\n                        </Grid>\r\n                        <Grid item xs={11}>\r\n                            <div className={classes.storyCon}>\r\n                                <div className={classes.storyHed}>\r\n                                    <Typography><b>{user.fullname}</b>&nbsp;\r\n                                        <span className={classes.storyUserName}>@{user.username}</span>&nbsp;\r\n                                        <span className={classes.storyUserName}>.</span>&nbsp;\r\n                                        <span>{formatDate(new Date(createdAt))}</span>\r\n                                    </Typography>\r\n                                </div>\r\n                                <div>\r\n\r\n                                    <IconButton aria-label=\"more\" aria-controls=\"long-menu\" aria-haspopup=\"true\"\r\n                                                onClick={handleClick}>\r\n                                        <MoreVertIcon/>\r\n                                    </IconButton>\r\n                                    <Menu id=\"long-menu\" anchorEl={anchorEl} keepMounted open={open}\r\n                                          onClose={handleClose}>\r\n                                        <MenuItem onClick={handleClickEdit}>\r\n                                            Редактировать\r\n                                        </MenuItem>\r\n                                        <MenuItem onClick={handleClickDelete}>\r\n                                            Удалить\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                </div>\r\n                            </div>\r\n                            <a className={classes.storyWrapper} onClick={handleClickStory} href={`/home/story/${_id}`}>\r\n                                <Typography variant=\"subtitle1\" align='center' gutterBottom>\r\n                                    {title}\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" gutterBottom>\r\n                                    {text}\r\n                                </Typography>\r\n                            </a>\r\n                            <div className={classes.storyFooter}>\r\n                                <div>\r\n                                    <IconButton color='primary'>\r\n                                        <CommentIcon style={{fontSize: 20}}/>\r\n                                    </IconButton>\r\n                                    <span>1</span>\r\n                                </div>\r\n                                <div>\r\n                                    <IconButton color='primary'>\r\n                                        <RepostIcon style={{fontSize: 20}}/>\r\n                                    </IconButton>\r\n                                </div>\r\n                                <div>\r\n                                    <IconButton color='primary'>\r\n                                        <LikeIcon style={{fontSize: 20}}/>\r\n                                    </IconButton>\r\n                                </div>\r\n                                <div>\r\n                                    <IconButton color='primary'>\r\n                                        <ShareIcon style={{fontSize: 20}}/>\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\n","C:\\React\\StoryApp\\client\\src\\utils\\BackButton.tsx",[],"C:\\React\\StoryApp\\client\\src\\store\\reducers\\story\\selectors.ts",[],"C:\\React\\StoryApp\\client\\src\\utils\\formatDate.ts",[],"C:\\React\\StoryApp\\client\\src\\componetns\\AddStoryForm.tsx",["210","211"],"import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport classNames from 'classnames'\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined'\r\nimport EmojiIcon from '@material-ui/icons/SentimentSatisfiedOutlined'\r\nimport {fetchAddStoryAC, fetchStoriesAC} from \"../store/reducers/stories/actionCreators\"\r\nimport {selectStoryData, selectStoryLoadingStatus} from \"../store/reducers/story/selectors\"\r\nimport {selectAddFormState} from \"../store/reducers/stories/selectors\"\r\nimport {Alert} from \"@material-ui/lab\"\r\nimport {clearStoryDataAfterEditAC} from \"../store/reducers/story/actionCreators\"\r\nimport {LoadingStatus} from \"../store/types\"\r\nimport {AddFormState, NewStory} from \"../store/reducers/stories/reducer\";\r\nimport {useProfileStyles} from \"../pages/Profile/ProfileStyle\";\r\nimport {selectUserData, selectUserDataID} from \"../store/reducers/users/selectors\";\r\nimport {FetchUserStoriesAC} from \"../store/reducers/users/actionCreators\";\r\n\r\n\r\ninterface AddStoryFormProps {\r\n    classes: ReturnType<typeof useProfileStyles>\r\n    maxRows?: number\r\n}\r\n\r\nconst MAX_LENGTH = 3000;\r\n\r\nexport const AddStoryForm: React.FC<AddStoryFormProps> = ({classes, maxRows}: AddStoryFormProps): React.ReactElement => {\r\n    const [title, setTitle] = React.useState<string | undefined>('')\r\n    const [text, setText] = React.useState<string>('')\r\n\r\n    const textCount = MAX_LENGTH - text.length;\r\n    const textLimitPercent = Math.round((text.length / 3000) * 100);\r\n\r\n    const dispatch = useDispatch()\r\n    const addFormState = useSelector(selectAddFormState)\r\n    const story = useSelector(selectStoryData)\r\n    const loadingStatus = useSelector(selectStoryLoadingStatus)\r\n    const userId = useSelector(selectUserDataID)\r\n\r\n\r\n    useEffect(() => {\r\n        if (story) {\r\n            if (story.title !== title && story.text !== text) {\r\n                console.log('in UseEffect')\r\n                setTitle(story.title)\r\n                setText(story.text)\r\n            }\r\n        }\r\n    }, [story])\r\n\r\n\r\n    const handleChangeTextareaTitle = (e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n        if (e.currentTarget) {\r\n            setTitle(e.currentTarget.value);\r\n        }\r\n    };\r\n    const handleChangeTextarea = (e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n        if (e.currentTarget) {\r\n            setText(e.currentTarget.value);\r\n        }\r\n    };\r\n\r\n    //добавление истории\r\n    const handleClickAddStory = (): void => {\r\n        //собрать данные из локального стора и отправить в базу\r\n        const data: NewStory = {title, text}\r\n        dispatch(fetchAddStoryAC(data))\r\n        //обнулить локально\r\n        setTitle('')\r\n        setText('')\r\n        //обнулить в глобальном сторе\r\n        dispatch(clearStoryDataAfterEditAC())\r\n        dispatch(FetchUserStoriesAC(userId))\r\n    };\r\n\r\n    //редактировать\r\n    const handleClickDoneEdit = (): void => {\r\n        handleClickAddStory()\r\n        //обновить список историй, чтобы избежать дублирования\r\n        dispatch(fetchStoriesAC())\r\n        dispatch(FetchUserStoriesAC(userId))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.addFormBody}>\r\n                <div>\r\n                    <Avatar\r\n                        className={classes.storyAvatar}\r\n                        alt={`Аватарка пользователя UserAvatar`}\r\n                        src=\"https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80\"\r\n                    />\r\n                </div>\r\n                <div className={classes.addFormTextareaWrapper}>\r\n                    <TextareaAutosize\r\n                        onChange={handleChangeTextareaTitle}\r\n                        className={classes.addFormTextareaTitle}\r\n                        placeholder=\"Введите имя произвидения...\"\r\n                        value={title}\r\n                        rowsMax={maxRows}\r\n                    />\r\n                    <TextareaAutosize\r\n                        onChange={handleChangeTextarea}\r\n                        className={classes.addFormTextarea}\r\n                        placeholder=\"Рассказываете...\"\r\n                        value={text}\r\n                        rowsMax={maxRows}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={classes.addFormBottom}>\r\n                <div className={classNames(classes.storyFooter, classes.addFormBottomActions)}>\r\n                    <IconButton color=\"primary\">\r\n                        <ImageOutlinedIcon style={{fontSize: 26}}/>\r\n                    </IconButton>\r\n                    <IconButton color=\"primary\">\r\n                        <EmojiIcon style={{fontSize: 26}}/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={classes.addFormBottomRight}>\r\n                    {text && (\r\n                        <>\r\n                            <span>{textCount}</span>\r\n                            <div className={classes.addFormCircleProgress}>\r\n                                <CircularProgress\r\n                                    variant=\"static\"\r\n                                    size={20}\r\n                                    thickness={5}\r\n                                    value={text.length >= MAX_LENGTH ? 100 : textLimitPercent}\r\n                                    style={text.length >= MAX_LENGTH ? {color: 'red'} : undefined}\r\n                                />\r\n                                <CircularProgress\r\n                                    style={{color: 'rgba(0, 0, 0, 0.1)'}}\r\n                                    variant=\"static\"\r\n                                    size={20}\r\n                                    thickness={5}\r\n                                    value={100}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    {loadingStatus === LoadingStatus.REDACTION\r\n                        ? (<Button\r\n                            onClick={handleClickDoneEdit}\r\n                            disabled={addFormState === AddFormState.LOADING || !text || text.length >= MAX_LENGTH}\r\n                            color=\"primary\"\r\n                            variant=\"contained\">\r\n                            {addFormState === AddFormState.LOADING\r\n                                ? (<CircularProgress color=\"inherit\" size={16}/>)\r\n                                : ('Готово')\r\n                            }\r\n                        </Button>)\r\n                        : (<Button\r\n                                onClick={handleClickAddStory}\r\n                                disabled={addFormState === AddFormState.LOADING || !text || text.length >= MAX_LENGTH}\r\n                                color=\"primary\"\r\n                                variant=\"contained\">\r\n                                {addFormState === AddFormState.LOADING\r\n                                    ? (<CircularProgress color=\"inherit\" size={16}/>)\r\n                                    : ('Опубликовать')}\r\n                            </Button>\r\n                        )}\r\n                </div>\r\n            </div>\r\n            {addFormState === AddFormState.ERROR && (\r\n                <Alert severity=\"error\">Ошибка при добавлении{' '}<span aria-label=\"emoji-plak\"\r\n                                                                        role=\"img\">!</span></Alert>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n","C:\\React\\StoryApp\\client\\src\\componetns\\ProfileStory.tsx",["212","213","214","215","216"],"C:\\React\\StoryApp\\client\\src\\componetns\\ProfileAvatar.tsx",[],"C:\\React\\StoryApp\\client\\src\\pages\\Home\\RightSide.tsx",[],"C:\\React\\StoryApp\\client\\src\\componetns\\HeaderMenu.tsx",["217","218","219","220"],"import React from 'react'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport NotificationIcon from '@material-ui/icons/NotificationsNoneOutlined'\r\nimport MessageIcon from '@material-ui/icons/EmailOutlined'\r\nimport BookmarkIcon from '@material-ui/icons/BookmarkBorderOutlined'\r\nimport ListIcon from '@material-ui/icons/ListAltOutlined'\r\nimport HomeIcon from '@material-ui/icons/HomeOutlined'\r\nimport UserIcon from '@material-ui/icons/PermIdentityOutlined'\r\nimport ImportContactsOutlinedIcon from '@material-ui/icons/ImportContactsOutlined'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {ModalBlock} from \"./ModalBlock\"\r\nimport {AddStoryForm} from \"./AddStoryForm\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {Tooltip} from \"@material-ui/core\"\r\nimport {useHomeStyles} from \"../pages/Home/theme\"\r\n\r\n\r\ninterface HeaderMenuProps {\r\n    classes: ReturnType<typeof useHomeStyles>\r\n}\r\n\r\nexport const HeaderMenu: React.FC<HeaderMenuProps> = ({classes}: HeaderMenuProps): React.ReactElement => {\r\n\r\n    const [visibleAddStory, setSetVisibleAddTweet] = React.useState<boolean>(false);\r\n\r\n    const handleClickOpenAddStory = () => {\r\n        setSetVisibleAddTweet(true);\r\n    };\r\n\r\n    const onCloseAddStory = () => {\r\n        setSetVisibleAddTweet(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ul className={classes.sideMenuList}>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <Tooltip title=\"Вернуться на главную\" interactive className={classes.popper}>\r\n                        <NavLink to='/home'>\r\n                            <IconButton>\r\n                                <ImportContactsOutlinedIcon className={classes.logoIcon} aria-label=\"\"\r\n                                                            color=\"secondary\"/>\r\n                            </IconButton>\r\n                        </NavLink>\r\n                    </Tooltip>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <Tooltip title='Главная' interactive>\r\n                        <NavLink to='/home'>\r\n                            <div>\r\n                                <HomeIcon className={classes.sideMenuListItemIcon}/>\r\n                                <Hidden smDown>\r\n                                    <Typography className={classes.sideMenuListItemLabel} variant=\"subtitle2\">\r\n                                        <span>Главная</span>\r\n                                    </Typography>\r\n                                </Hidden>\r\n                            </div>\r\n                        </NavLink>\r\n                    </Tooltip>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <Tooltip title='Главная' interactive>\r\n                        <div>\r\n                            <SearchIcon className={classes.sideMenuListItemIcon}/>\r\n                            <Hidden smDown>\r\n                                <Typography className={classes.sideMenuListItemLabel} variant=\"subtitle2\">\r\n                                    Поиск\r\n                                </Typography>\r\n                            </Hidden>\r\n                        </div>\r\n                    </Tooltip>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <Tooltip title='Главная' interactive>\r\n                        <div>\r\n                            <NotificationIcon className={classes.sideMenuListItemIcon}/>\r\n                            <Hidden smDown>\r\n                                <Typography className={classes.sideMenuListItemLabel} variant=\"subtitle2\">\r\n                                    Уведомления\r\n                                </Typography>\r\n                            </Hidden>\r\n                        </div>\r\n                    </Tooltip>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <Tooltip title='Главная' interactive>\r\n                        <div>\r\n                            <MessageIcon className={classes.sideMenuListItemIcon}/>\r\n\r\n                            <Hidden smDown>\r\n                                <Typography className={classes.sideMenuListItemLabel} variant=\"subtitle2\">\r\n                                    Сообщения\r\n                                </Typography>\r\n                            </Hidden>\r\n                        </div>\r\n                    </Tooltip>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <Tooltip title='Главная' interactive>\r\n                        <div>\r\n                            <BookmarkIcon className={classes.sideMenuListItemIcon}/>\r\n\r\n                            <Hidden smDown>\r\n                                <Typography className={classes.sideMenuListItemLabel} variant=\"subtitle2\">\r\n                                    Закладки\r\n                                </Typography>\r\n                            </Hidden>\r\n                        </div>\r\n                    </Tooltip>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <Tooltip title='Главная' interactive>\r\n                        <div>\r\n                            <ListIcon className={classes.sideMenuListItemIcon}/>\r\n\r\n                            <Hidden smDown>\r\n                                <Typography className={classes.sideMenuListItemLabel} variant=\"subtitle2\">\r\n                                    Список\r\n                                </Typography>\r\n                            </Hidden>\r\n                        </div>\r\n                    </Tooltip>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <Tooltip title='Главная' interactive>\r\n                        <NavLink to='/profile'>\r\n                            <div>\r\n                                <UserIcon className={classes.sideMenuListItemIcon}/>\r\n                                <Hidden smDown>\r\n                                    <Typography className={classes.sideMenuListItemLabel} variant=\"subtitle2\">\r\n                                        Профиль\r\n                                    </Typography>\r\n                                </Hidden>\r\n                            </div>\r\n                        </NavLink>\r\n                    </Tooltip>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <Button\r\n                        onClick={handleClickOpenAddStory}\r\n                        className={classes.sideMenuTweetButton}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth>\r\n                        <Hidden smDown>Опубликовать</Hidden>\r\n                        <Hidden mdUp>\r\n                            <CreateIcon/>\r\n                        </Hidden>\r\n                    </Button>\r\n                    {/*<ModalBlock onClose={onCloseAddStory} visible={visibleAddStory}>*/}\r\n                    {/*    <div style={{width: 550}}>*/}\r\n                    {/*        <AddStoryForm maxRows={15} classes={classes}/>*/}\r\n                    {/*    </div>*/}\r\n                    {/*</ModalBlock>*/}\r\n                </li>\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n","C:\\React\\StoryApp\\client\\src\\componetns\\SearchTextField.tsx",[],["221","222"],"C:\\React\\StoryApp\\client\\src\\pages\\Profile\\index.tsx",["223","224"],"import React, {useEffect} from \"react\"\r\nimport {useProfileStyles} from \"./ProfileStyle\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ScrollButton from \"../../componetns/ScrollButton\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    selectUserData,\r\n    selectUserDataID,\r\n    selectUserIsAuth,\r\n    selectUserStories\r\n} from \"../../store/reducers/users/selectors\";\r\nimport {FetchUserStoriesAC} from \"../../store/reducers/users/actionCreators\";\r\nimport {ProfileInfo} from \"./ProfileInfo\";\r\nimport {ProfileStories} from \"./ProfileStories\";\r\n\r\n\r\nexport const Index = () => {\r\n    const classes = useProfileStyles();\r\n    const dispatch = useDispatch()\r\n    const userData = useSelector(selectUserData)\r\n    const userIsAuth = useSelector(selectUserIsAuth)\r\n    const stories = useSelector(selectUserStories)\r\n    useEffect(()=>{\r\n        console.log('RENDER dispathc in useEffect')\r\n        if(userIsAuth) {\r\n            dispatch(FetchUserStoriesAC(userData._id))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <ScrollButton>\r\n            <div className={classes.wrapper}>\r\n                <Grid container spacing={1}>\r\n                   <ProfileInfo stories={stories} userData={userData}/>\r\n                   <ProfileStories userIsAuth={userIsAuth} stories={stories} />\r\n                </Grid>\r\n            </div>\r\n        </ScrollButton>\r\n    )\r\n}\r\n","C:\\React\\StoryApp\\client\\src\\pages\\Profile\\ProfileStyle.ts",["225","226","227"]," // @ts-nocheck\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nexport const useProfileStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        flexGrow: 1,\r\n        // backgroundColor: 'rgba(29, 100, 100, 0.1)',\r\n        flexWrap: \"wrap\",\r\n    },\r\n    paperLeft: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        backgroundColor: 'rgba(29, 100, 100, 0.6)',\r\n        width: '20vw',\r\n        height: '70vh',\r\n        margin: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        borderRadius: '2%',\r\n        boxShadow: '0 0 10px rgba(0,0,0,0.5)'\r\n    },\r\n    infoWrap: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '5px 10px'\r\n    },\r\n    addForm: {\r\n        padding: 20,\r\n    },\r\n    addFormBody: {\r\n        display: 'flex',\r\n        width: '100%',\r\n    },\r\n    addFormBottomActions: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    storyAvatar: {\r\n        display: 'flex-start',\r\n        width: theme.spacing(6.5),\r\n        height: theme.spacing(6.5),\r\n        marginRight: 10,\r\n        '@media (max-width:1100px)': {\r\n            width: theme.spacing(4.5),\r\n            height: theme.spacing(4.5),\r\n        },\r\n        '@media (max-width:890px)': {\r\n            width: theme.spacing(3),\r\n            height: theme.spacing(3),\r\n        },\r\n        '@media (max-width:600px)': {\r\n            width: theme.spacing(3.5),\r\n            height: theme.spacing(3.5),\r\n        }\r\n    },\r\n    addFormBottomActions: {\r\n        marginTop: 10,\r\n        paddingLeft: 70,\r\n    },\r\n    addFormTextareaWrapper: {\r\n        width: '100%'\r\n    },\r\n    addFormTextareaTitle: {\r\n        width: '100%',\r\n        border: '1px solid rgba(169, 187, 184, 0.19)',\r\n        fontSize: 20,\r\n        outline: 'none',\r\n        fontFamily: 'inherit',\r\n        resize: 'none',\r\n    },\r\n    addFormTextarea: {\r\n        width: '100%',\r\n        border: 0,\r\n        fontSize: 20,\r\n        outline: 'none',\r\n        fontFamily: 'inherit',\r\n        resize: 'none',\r\n    },\r\n    addFormBottom: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    storyFooterLine: {\r\n        height: 12,\r\n        backgroundColor: '#E6ECF0',\r\n    },\r\n    addFormCircleProgress: {\r\n        position: 'relative',\r\n        width: 20,\r\n        height: 20,\r\n        margin: '0 10px',\r\n        '& .MuiCircularProgress-root': {\r\n            position: 'absolute',\r\n        },\r\n    },\r\n    addFormBottomRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    addFormBottomLine: {\r\n        height: 12,\r\n        backgroundColor: '#E6ECF0',\r\n    },\r\n    paperRight: {\r\n        position: 'relative',\r\n        padding: theme.spacing(2.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        height: '10vh',\r\n        borderLeft: '50px'\r\n    },\r\n    profileImage: {\r\n        position: \"relative\",\r\n        top: \"-10px\",\r\n        justifyContent: \"center\",\r\n        width: theme.spacing(40),\r\n        height: theme.spacing(50),\r\n        border: \"1px solid white\",\r\n        margin: \"auto\"\r\n    },\r\n    profileInfoContainer: {\r\n        position: \"relative\",\r\n        top: \"-10px\",\r\n        margin: \"auto\"\r\n    },\r\n    userName: {\r\n        fontWeight: \"bold\",\r\n        marginBottom: 0\r\n    },\r\n    userTag: {\r\n        marginTop: 0\r\n    },\r\n    contentContainer: {\r\n        position: \"relative\",\r\n        top: \"-90px\"\r\n    },\r\n    storyCentred: {\r\n        marginTop: 50,\r\n        textAlign: 'center',\r\n    },storyWrapper: {\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n        borderRadius: 0,\r\n        height: '100%',\r\n        borderTop: '0',\r\n        borderBottom: '0',\r\n    },\r\n    storyCentred: {\r\n        marginTop: 50,\r\n        textAlign: 'center',\r\n    },\r\n    storyHeader: {\r\n        borderTop: '0',\r\n        borderLeft: '0',\r\n        borderRight: '0',\r\n        borderRadius: 0,\r\n        padding: '10px 15px',\r\n        '& h6': {\r\n            fontWeight: 800,\r\n        },\r\n    },\r\n    storyHeaderUser: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    storyHeaderBackButton: {\r\n        marginRight: 20,\r\n    },\r\n    storyWrapperHide: {\r\n        height: '25vh',\r\n        overflow: 'hidden'\r\n    },\r\n    storyWrapper: {\r\n        height: '100%'\r\n    },\r\n    story: {\r\n        display: 'flex',\r\n        cursor: 'pointer',\r\n        paddingTop: 15,\r\n        paddingLeft: 10,\r\n        wordBreak: 'break-all',\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(245, 248, 250)',\r\n        },\r\n    },\r\n    storyFooter: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        left: -13,\r\n        justifyContent: 'space-between',\r\n        maxWidth: 450,\r\n    },\r\n    storyUserName: {\r\n        color: grey[500],\r\n    },\r\n    storyCon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    },\r\n    storyHed: {\r\n        flex: 1\r\n    },\r\n}));\r\n","C:\\React\\StoryApp\\client\\src\\pages\\Profile\\ProfileStories.tsx",[],"C:\\React\\StoryApp\\client\\src\\pages\\Profile\\ProfileInfo.tsx",[],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":35,"column":8,"nodeType":"234","endLine":35,"endColumn":25,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":25,"column":7,"nodeType":"238","messageId":"239","endLine":25,"endColumn":11},{"ruleId":"236","severity":1,"message":"240","line":2,"column":9,"nodeType":"238","messageId":"239","endLine":2,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":12,"column":7,"nodeType":"238","messageId":"243","endLine":12,"endColumn":31},{"ruleId":"236","severity":1,"message":"244","line":3,"column":9,"nodeType":"238","messageId":"239","endLine":3,"endColumn":21},{"ruleId":"236","severity":1,"message":"245","line":3,"column":9,"nodeType":"238","messageId":"239","endLine":3,"endColumn":19},{"ruleId":"236","severity":1,"message":"246","line":8,"column":9,"nodeType":"238","messageId":"239","endLine":8,"endColumn":21},{"ruleId":"247","severity":1,"message":"248","line":43,"column":1,"nodeType":"249","messageId":"250","endLine":44,"endColumn":2},{"ruleId":"236","severity":1,"message":"251","line":18,"column":9,"nodeType":"238","messageId":"239","endLine":18,"endColumn":25},{"ruleId":"236","severity":1,"message":"252","line":19,"column":9,"nodeType":"238","messageId":"239","endLine":19,"endColumn":23},{"ruleId":"232","severity":1,"message":"253","line":52,"column":8,"nodeType":"234","endLine":52,"endColumn":15,"suggestions":"254"},{"ruleId":"236","severity":1,"message":"255","line":1,"column":16,"nodeType":"238","messageId":"239","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"256","line":16,"column":9,"nodeType":"238","messageId":"239","endLine":16,"endColumn":27},{"ruleId":"236","severity":1,"message":"257","line":18,"column":9,"nodeType":"238","messageId":"239","endLine":18,"endColumn":22},{"ruleId":"236","severity":1,"message":"258","line":31,"column":11,"nodeType":"238","messageId":"239","endLine":31,"endColumn":17},{"ruleId":"236","severity":1,"message":"259","line":32,"column":11,"nodeType":"238","messageId":"239","endLine":32,"endColumn":31},{"ruleId":"236","severity":1,"message":"260","line":15,"column":9,"nodeType":"238","messageId":"239","endLine":15,"endColumn":19},{"ruleId":"236","severity":1,"message":"244","line":16,"column":9,"nodeType":"238","messageId":"239","endLine":16,"endColumn":21},{"ruleId":"236","severity":1,"message":"261","line":28,"column":12,"nodeType":"238","messageId":"239","endLine":28,"endColumn":27},{"ruleId":"236","severity":1,"message":"262","line":34,"column":11,"nodeType":"238","messageId":"239","endLine":34,"endColumn":26},{"ruleId":"228","replacedBy":"263"},{"ruleId":"230","replacedBy":"264"},{"ruleId":"236","severity":1,"message":"265","line":8,"column":5,"nodeType":"238","messageId":"239","endLine":8,"endColumn":21},{"ruleId":"232","severity":1,"message":"266","line":28,"column":8,"nodeType":"234","endLine":28,"endColumn":10,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":58,"column":5,"nodeType":"270","messageId":"271","endLine":58,"endColumn":25},{"ruleId":"268","severity":1,"message":"272","line":155,"column":5,"nodeType":"270","messageId":"271","endLine":155,"endColumn":17},{"ruleId":"268","severity":1,"message":"273","line":180,"column":5,"nodeType":"270","messageId":"271","endLine":180,"endColumn":17},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["276"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'User' is defined but never used.","@typescript-eslint/no-redeclare","'Layout' is already defined.","redeclared","'AddStoryForm' is defined but never used.","'StoryState' is defined but never used.","'Notification' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useProfileStyles' is defined but never used.","'selectUserData' is defined but never used.","React Hook useEffect has missing dependencies: 'text' and 'title'. Either include them or remove the dependency array.",["277"],"'useEffect' is defined but never used.","'FetchUserStoriesAC' is defined but never used.","'LoadingStatus' is defined but never used.","'userId' is assigned a value but never used.","'loadingStoriesStatus' is assigned a value but never used.","'ModalBlock' is defined but never used.","'visibleAddStory' is assigned a value but never used.","'onCloseAddStory' is assigned a value but never used.",["274"],["275"],"'selectUserDataID' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'userData._id', and 'userIsAuth'. Either include them or remove the dependency array.",["278"],"no-dupe-keys","Duplicate key 'addFormBottomActions'.","ObjectExpression","unexpected","Duplicate key 'storyCentred'.","Duplicate key 'storyWrapper'.","no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},"Update the dependencies array to be: [history, isAuth, isReady]",{"range":"285","text":"286"},"Update the dependencies array to be: [story, text, title]",{"range":"287","text":"288"},"Update the dependencies array to be: [dispatch, userData._id, userIsAuth]",{"range":"289","text":"290"},[1566,1583],"[history, isAuth, isReady]",[2312,2319],"[story, text, title]",[1007,1009],"[dispatch, userData._id, userIsAuth]"]