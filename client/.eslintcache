[{"C:\\APPS\\StoryApp\\client\\src\\index.js":"1","C:\\APPS\\StoryApp\\client\\src\\store\\store.ts":"2","C:\\APPS\\StoryApp\\client\\src\\App.tsx":"3","C:\\APPS\\StoryApp\\client\\src\\theme.jsx":"4","C:\\APPS\\StoryApp\\client\\src\\store\\saga.ts":"5","C:\\APPS\\StoryApp\\client\\src\\store\\types.ts":"6","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\stories\\reducer.ts":"7","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\users\\selectors.ts":"8","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\users\\actionCreators.ts":"9","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\story\\reducer.ts":"10","C:\\APPS\\StoryApp\\client\\src\\pages\\SingIn\\theme.ts":"11","C:\\APPS\\StoryApp\\client\\src\\pages\\Home\\Home.tsx":"12","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\users\\reducer.ts":"13","C:\\APPS\\StoryApp\\client\\src\\pages\\Layout.tsx":"14","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\users\\saga.ts":"15","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\story\\saga.ts":"16","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\stories\\actionCreators.ts":"17","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\story\\actionCreators.ts":"18","C:\\APPS\\StoryApp\\client\\src\\pages\\SingIn\\index.tsx":"19","C:\\APPS\\StoryApp\\client\\src\\pages\\Profile\\index.tsx":"20","C:\\APPS\\StoryApp\\client\\src\\restApi\\userApi.ts":"21","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\stories\\sagas.ts":"22","C:\\APPS\\StoryApp\\client\\src\\restApi\\storiesApi.ts":"23","C:\\APPS\\StoryApp\\client\\src\\pages\\SingIn\\components\\RegistrationModal.tsx":"24","C:\\APPS\\StoryApp\\client\\src\\pages\\Profile\\ProfileStories.tsx":"25","C:\\APPS\\StoryApp\\client\\src\\restApi\\axios.ts":"26","C:\\APPS\\StoryApp\\client\\src\\pages\\Profile\\ProfileStyle.ts":"27","C:\\APPS\\StoryApp\\client\\src\\componetns\\ProfileStory.tsx":"28","C:\\APPS\\StoryApp\\client\\src\\componetns\\AddStoryForm.tsx":"29","C:\\APPS\\StoryApp\\client\\src\\componetns\\ModalBlock.tsx":"30","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\stories\\selectors.ts":"31","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\story\\selectors.ts":"32","C:\\APPS\\StoryApp\\client\\src\\componetns\\addStoryStyles.ts":"33","C:\\APPS\\StoryApp\\client\\src\\utils\\formatDate.ts":"34","C:\\APPS\\StoryApp\\client\\src\\pages\\SingIn\\components\\LoginModal.tsx":"35","C:\\APPS\\StoryApp\\client\\src\\componetns\\ScrollButton.tsx":"36","C:\\APPS\\StoryApp\\client\\src\\pages\\Profile\\ProfileInfo.tsx":"37","C:\\APPS\\StoryApp\\client\\src\\pages\\Home\\theme.ts":"38","C:\\APPS\\StoryApp\\client\\src\\pages\\Home\\RightSide.tsx":"39","C:\\APPS\\StoryApp\\client\\src\\componetns\\FullStory.tsx":"40","C:\\APPS\\StoryApp\\client\\src\\componetns\\HeaderMenu.tsx":"41","C:\\APPS\\StoryApp\\client\\src\\componetns\\ModalMenu.tsx":"42","C:\\APPS\\StoryApp\\client\\src\\componetns\\Story.tsx":"43","C:\\APPS\\StoryApp\\client\\src\\componetns\\ProfileAvatar.tsx":"44","C:\\APPS\\StoryApp\\client\\src\\componetns\\SearchTextField.tsx":"45","C:\\APPS\\StoryApp\\client\\src\\componetns\\BackButton.tsx":"46","C:\\APPS\\StoryApp\\client\\src\\componetns\\UploadImages.tsx":"47","C:\\APPS\\StoryApp\\client\\src\\componetns\\ImageList.tsx":"48","C:\\APPS\\StoryApp\\client\\src\\utils\\uploadFile.ts":"49"},{"size":794,"mtime":1608572166539,"results":"50","hashOfConfig":"51"},{"size":1056,"mtime":1608739938089,"results":"52","hashOfConfig":"51"},{"size":2505,"mtime":1609258720374,"results":"53","hashOfConfig":"51"},{"size":2542,"mtime":1608311980681,"results":"54","hashOfConfig":"51"},{"size":295,"mtime":1608739938088,"results":"55","hashOfConfig":"51"},{"size":179,"mtime":1608805639704,"results":"56","hashOfConfig":"51"},{"size":2363,"mtime":1610129717528,"results":"57","hashOfConfig":"51"},{"size":1874,"mtime":1609258720424,"results":"58","hashOfConfig":"51"},{"size":4183,"mtime":1609258720411,"results":"59","hashOfConfig":"51"},{"size":1904,"mtime":1608805027061,"results":"60","hashOfConfig":"51"},{"size":1746,"mtime":1608739938073,"results":"61","hashOfConfig":"51"},{"size":3460,"mtime":1610125927876,"results":"62","hashOfConfig":"51"},{"size":2271,"mtime":1609593932384,"results":"63","hashOfConfig":"51"},{"size":1245,"mtime":1609593932372,"results":"64","hashOfConfig":"51"},{"size":4100,"mtime":1609258720423,"results":"65","hashOfConfig":"51"},{"size":2176,"mtime":1609593932382,"results":"66","hashOfConfig":"51"},{"size":3319,"mtime":1608802597152,"results":"67","hashOfConfig":"51"},{"size":2999,"mtime":1609593932380,"results":"68","hashOfConfig":"51"},{"size":2593,"mtime":1608982272091,"results":"69","hashOfConfig":"51"},{"size":1404,"mtime":1609605220458,"results":"70","hashOfConfig":"51"},{"size":1790,"mtime":1609258720401,"results":"71","hashOfConfig":"51"},{"size":1425,"mtime":1609258720407,"results":"72","hashOfConfig":"51"},{"size":1072,"mtime":1608809941653,"results":"73","hashOfConfig":"51"},{"size":7782,"mtime":1608983416832,"results":"74","hashOfConfig":"51"},{"size":1846,"mtime":1609605457824,"results":"75","hashOfConfig":"51"},{"size":255,"mtime":1608739938074,"results":"76","hashOfConfig":"51"},{"size":5706,"mtime":1609607970990,"results":"77","hashOfConfig":"51"},{"size":5544,"mtime":1609593932363,"results":"78","hashOfConfig":"51"},{"size":8551,"mtime":1610130032685,"results":"79","hashOfConfig":"51"},{"size":1285,"mtime":1608982899629,"results":"80","hashOfConfig":"51"},{"size":1344,"mtime":1608739938080,"results":"81","hashOfConfig":"51"},{"size":1173,"mtime":1608742777766,"results":"82","hashOfConfig":"51"},{"size":2213,"mtime":1609593932366,"results":"83","hashOfConfig":"51"},{"size":235,"mtime":1608817454862,"results":"84","hashOfConfig":"51"},{"size":4924,"mtime":1608996426931,"results":"85","hashOfConfig":"51"},{"size":2244,"mtime":1608823873060,"results":"86","hashOfConfig":"51"},{"size":3174,"mtime":1609602821122,"results":"87","hashOfConfig":"51"},{"size":8364,"mtime":1610128935293,"results":"88","hashOfConfig":"51"},{"size":5020,"mtime":1608824543100,"results":"89","hashOfConfig":"51"},{"size":6594,"mtime":1608821686317,"results":"90","hashOfConfig":"51"},{"size":5804,"mtime":1609593932361,"results":"91","hashOfConfig":"51"},{"size":1411,"mtime":1608822223839,"results":"92","hashOfConfig":"51"},{"size":4333,"mtime":1609593932365,"results":"93","hashOfConfig":"51"},{"size":4074,"mtime":1609608191199,"results":"94","hashOfConfig":"51"},{"size":1014,"mtime":1608823872974,"results":"95","hashOfConfig":"51"},{"size":533,"mtime":1608824262501,"results":"96","hashOfConfig":"51"},{"size":2250,"mtime":1610128970413,"results":"97","hashOfConfig":"51"},{"size":1096,"mtime":1610128840243,"results":"98","hashOfConfig":"51"},{"size":471,"mtime":1610126260818,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1kg83xe",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"105"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"105"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"105"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"105"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"105"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"105"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"105"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"105"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\APPS\\StoryApp\\client\\src\\index.js",[],["214","215"],"C:\\APPS\\StoryApp\\client\\src\\store\\store.ts",[],["216","217"],"C:\\APPS\\StoryApp\\client\\src\\App.tsx",["218"],"import React, {useEffect} from 'react';\r\nimport {Route, Switch, useHistory} from 'react-router-dom'\r\nimport {SignIn} from \"./pages/SingIn\";\r\nimport Layout from \"./pages/Layout\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Index} from \"./pages/Profile\";\r\nimport {Home} from \"./pages/Home/Home\";\r\nimport {useStylesSignIn} from \"./pages/SingIn/theme\";\r\nimport ImportContactsOutlinedIcon from \"@material-ui/icons/ImportContactsOutlined\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {selectUserIsAuth, selectUserStatus} from \"./store/reducers/users/selectors\";\r\nimport {LoadingStatus} from \"./store/types\";\r\nimport {FetchAuthAC} from \"./store/reducers/users/actionCreators\";\r\n\r\n\r\n//TODO: выяснить, почему не компилится когда есть tsconfig, и какого черта он постоянно создается\r\n//подтянуть информацию о пользователе, в общем страница пользователя и подкоректировать бэк\r\nconst App = () => {\r\n    const classes = useStylesSignIn()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(selectUserIsAuth)\r\n    const loadingStatus = useSelector(selectUserStatus)\r\n    //говорит о полной готовности загрузки\r\n    const isReady = loadingStatus !== LoadingStatus.NEVER && loadingStatus !== LoadingStatus.LOADING\r\n\r\n    useEffect(() => {\r\n        //запрос на логинизацию\r\n        dispatch(FetchAuthAC());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        //если и дата прилетела и статусы поменялись\r\n        (!isAuth && isReady) ? history.push('/signin') : history.push('/home')\r\n    }, [isAuth, isReady]);\r\n\r\n    if (!isReady) {\r\n        return (\r\n            <div className={classes.loadingApp}>\r\n                <ImportContactsOutlinedIcon className={classes.loadingIcon} aria-label=\"\" color=\"secondary\"/>\r\n                <CircularProgress className={classes.loadingStatusBar}/>\r\n            </div>)\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Switch>\r\n                <Route path=\"/signin\" component={SignIn} exact/>\r\n                <Layout>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/profile\" component={Index}/>\r\n                </Layout>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","C:\\APPS\\StoryApp\\client\\src\\theme.jsx",[],"C:\\APPS\\StoryApp\\client\\src\\store\\saga.ts",[],"C:\\APPS\\StoryApp\\client\\src\\store\\types.ts",[],"C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\stories\\reducer.ts",[],"C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\users\\selectors.ts",["219"],"import {RootState} from \"../../store\";\r\nimport {User, UserState} from \"./reducer\";\r\nimport {LoadingStatus} from \"../../types\";\r\n\r\n//state user полностью\r\nexport const selectUserState = (state: RootState): UserState => state.user\r\n\r\n//только дата\r\nexport const selectUserData = (state: RootState): UserState['data'] => selectUserState(state).data\r\n\r\n//достать id пользователя\r\nexport const selectUserDataID = (state: RootState): string => selectUserState(state).data._id\r\n\r\n//только истории\r\nexport const selectUserStories = (state: RootState): UserState['stories'] => selectUserState(state).stories\r\n\r\n//только статус\r\nexport const selectUserStatus = (state: RootState): UserState['status'] => selectUserState(state).status\r\n\r\n//только статус загрузки историй\r\nexport const selectUserLoadingStories = (state: RootState): UserState['storiesLoading'] => selectUserState(state).storiesLoading\r\n\r\n//булево значинеи, наличия данных в дате\r\nexport const selectUserIsAuth = (state: RootState): boolean => !!selectUserState(state).data\r\n\r\n//булево значинеи, наличия данных в историях юзера\r\nexport const selectUserDataStories = (state: RootState): boolean => !!selectUserState(state).stories\r\n\r\n//булево значение, если статус загрузки назодиться в \"ЗАГРУЗКА\\LOADING\\ЗАГРУЖАЕТСЯ\"\r\nexport const selectUserIsLoading = (state: RootState): boolean =>\r\n    selectUserState(state).status === LoadingStatus.LOADING\r\n\r\n//булево значение, если статус загрузки назодиться в \"ЗАГРУЖЕН\\LOADED\"\r\nexport const selectUserIsLoaded = (state: RootState): boolean =>\r\n    selectUserState(state).status === LoadingStatus.LOADED","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\users\\actionCreators.ts",[],"C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\story\\reducer.ts",[],"C:\\APPS\\StoryApp\\client\\src\\pages\\SingIn\\theme.ts",[],"C:\\APPS\\StoryApp\\client\\src\\pages\\Home\\Home.tsx",["220"],"import React, {useEffect} from 'react'\r\nimport {Paper, Typography} from \"@material-ui/core\"\r\nimport {AddStoryForm} from \"../../componetns/AddStoryForm\"\r\nimport {Story} from \"../../componetns/Story\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport ModalMenu from \"../../componetns/ModalMenu\"\r\nimport BackButton from \"../../componetns/BackButton\"\r\nimport {Route} from \"react-router-dom\"\r\nimport {FullStory} from \"../../componetns/FullStory\"\r\nimport {useHomeStyles} from \"./theme\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport ScrollButton from \"../../componetns/ScrollButton\"\r\nimport {selectIsStoriesLoaded, selectStoriesItems} from \"../../store/reducers/stories/selectors\"\r\nimport {fetchStoriesAC} from \"../../store/reducers/stories/actionCreators\"\r\n\r\n\r\nexport const Home: React.FC = (): React.ReactElement => {\r\n    const classes = useHomeStyles()\r\n    const dispatch = useDispatch()\r\n    const stories = useSelector(selectStoriesItems)\r\n    const isLoading = useSelector(selectIsStoriesLoaded)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchStoriesAC())\r\n    }, [dispatch])\r\n    return (\r\n        <ScrollButton>\r\n            <Paper className={classes.storyWrapper} variant=\"outlined\">\r\n                <Paper>\r\n                    <div className={classes.menuHeader}>\r\n\r\n                        <div style={{display: 'flex'}}>\r\n                            <Route path=\"/home/:any\">\r\n                                <BackButton/>\r\n                            </Route>\r\n\r\n                            <Route path={['/home', '/home/search']} exact>\r\n                                <Paper variant=\"outlined\" className={classes.storyHeader}>\r\n                                    <Typography variant=\"h6\">Главная</Typography>\r\n                                </Paper>\r\n                            </Route>\r\n\r\n                            <Route path=\"/home/stories/:id\">\r\n                                <Paper className={classes.storyHeader} style={{marginLeft: -14}}>\r\n                                    <Typography variant=\"h6\">Story</Typography>\r\n                                </Paper>\r\n                            </Route>\r\n                        </div>\r\n\r\n                        <div className={classes.modalMenu}>\r\n                            <Paper>\r\n                                <ModalMenu/>\r\n                            </Paper>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Paper>\r\n\r\n                {/*<Route path={['/home', '/home/search']} exact>*/}\r\n                {/*    <Paper>*/}\r\n                {/*        <div className={classes.addForm}>*/}\r\n                {/*            <AddStoryForm classes={classes}/>*/}\r\n                {/*        </div>*/}\r\n                {/*        <div className={classes.addFormBottomLine}/>*/}\r\n                {/*    </Paper>*/}\r\n                {/*</Route>*/}\r\n\r\n                <Route path=\"/home\" exact>\r\n                    {isLoading\r\n                        ? (stories.map((obj) => (\r\n                            <Story key={obj._id} classes={classes} {...obj}/>\r\n                        )))\r\n                        : (<div className={classes.storyCentred}>\r\n                            <CircularProgress/>\r\n                        </div>)}\r\n                </Route>\r\n                <Route path='/home/stories/:id' render={() => <FullStory/>} exact/>\r\n            </Paper>\r\n        </ScrollButton>\r\n    )\r\n}\r\n\r\n","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\users\\reducer.ts",["221"],"import produce, {Draft} from \"immer\";\r\nimport {LoadingStatus} from \"../../types\";\r\nimport {UserActions, UserActionsType} from \"./actionCreators\";\r\nimport {Story} from \"../stories/reducer\";\r\n\r\nexport interface User {\r\n    _id: string\r\n    email: string\r\n    fullname: string\r\n    username: string\r\n    password: string\r\n    confirmHash: string\r\n    confirmed?: boolean\r\n    location?: string\r\n    about?: string\r\n    website?: string\r\n}\r\n\r\nexport interface UserState {\r\n    data?: User | undefined\r\n    stories: Story[] | undefined\r\n    storiesLoading: LoadingStatus\r\n    status: LoadingStatus\r\n}\r\nconst data = {\r\n    _id: '',\r\n    email: '',\r\n    fullname: '',\r\n    username: '',\r\n    password: '',\r\n    confirmHash: '',\r\n    confirmed: false,\r\n    location: '',\r\n    about: '',\r\n    website: ''\r\n}\r\n\r\nconst initialState: UserState = {\r\n    data: undefined,\r\n    stories: undefined,\r\n    storiesLoading: LoadingStatus.NEVER,\r\n    status: LoadingStatus.NEVER,\r\n}\r\n\r\n//редьюсер пользователя\r\nexport const userReducer = produce((draft: Draft<UserState>, action: UserActions) => {\r\n    switch (action.type) {\r\n        //на случай успешной логинизации, вернет статус \"success\" и данные на юзера\r\n        case UserActionsType.SET_USER_DATA:\r\n            draft.data = action.payload\r\n            draft.status = LoadingStatus.SUCCESS\r\n            break\r\n        //начать запрос на все истории юзера\r\n        case UserActionsType.FETCH_ALL_USER_STORIES:\r\n            draft.stories = undefined\r\n            break\r\n        //засетать все истории юзера\r\n        case UserActionsType.SET_ALL_USER_STORIES:\r\n            draft.stories = action.payload\r\n            draft.storiesLoading = LoadingStatus.LOADED\r\n            break\r\n        //установка статуса\r\n        case UserActionsType.SET_LOADING_STATUS_STATE:\r\n            draft.status = action.payload\r\n            break\r\n        //установка статуса загрузки историй\r\n        case UserActionsType.SET_LOADING_STATUS_STORIES:\r\n            draft.storiesLoading = action.payload\r\n            break\r\n\r\n        default:\r\n            break\r\n    }\r\n}, initialState)\r\n","C:\\APPS\\StoryApp\\client\\src\\pages\\Layout.tsx",["222"],"import React, {useEffect} from 'react';\r\nimport {Container, Grid} from '@material-ui/core';\r\nimport {HeaderMenu} from \"../componetns/HeaderMenu\";\r\nimport {useHomeStyles} from \"./Home/theme\";\r\nimport RightSide from \"./Home/RightSide\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {fetchStoriesAC} from \"../store/reducers/stories/actionCreators\";\r\ninterface Layout {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Layout: React.FC<Layout> = ({children}): React.ReactElement => {\r\n    const dispatch = useDispatch()\r\n    const classes = useHomeStyles()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchStoriesAC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.wrapper}>\r\n            {/*spacing - расстояние между блоками гридов*/}\r\n            <Grid container spacing={2}>\r\n                <Grid xs={12} item>\r\n                    <HeaderMenu classes={classes}/>\r\n                </Grid>\r\n\r\n                <Grid xs={10} item>\r\n                    {children}\r\n                </Grid>\r\n\r\n                <Grid xs={2} item>\r\n                    <RightSide classes={classes}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\nexport default Layout\r\n","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\users\\saga.ts",[],"C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\story\\saga.ts",["223"],"import {call, put, takeLatest} from 'redux-saga/effects';\r\nimport {\r\n    DeleteStoryByIdAI,\r\n    FetchEditStoryDataAI,\r\n    FetchStoryDataAI,\r\n    setStoryByIdAC,\r\n    setStoryLoadingStatusAC,\r\n    StoryActionsTypes\r\n} from \"./actionCreators\"\r\nimport {Story} from \"../stories/reducer\";\r\nimport {StoriesApi} from \"../../../restApi/storiesApi\";\r\nimport {LoadingStatus} from \"../../types\";\r\nimport {fetchStoriesRequest} from \"../stories/sagas\";\r\nimport {FetchUserStoriesAC} from \"../users/actionCreators\";\r\nimport {fetchUserStoriesRequest} from \"../users/saga\";\r\n\r\n\r\n//получить конкретную историю по id\r\nexport function* fetchStoryDataRequest ({payload: _id}: FetchStoryDataAI) {\r\n    try {\r\n        const data: Story = yield call(StoriesApi.getStory, _id)\r\n        yield put(setStoryByIdAC(data))\r\n    } catch (error) {\r\n        yield put(setStoryLoadingStatusAC(LoadingStatus.ERROR))\r\n    }\r\n}\r\n\r\n//редактировать историю\r\nexport function* editStoryDataRequest ({payload: _id}: FetchEditStoryDataAI){\r\n    try {\r\n        const data: Story = yield call(StoriesApi.getStory, _id)\r\n        yield put(setStoryByIdAC(data))\r\n        const res = yield call(StoriesApi.deleteStory, _id)\r\n        if(res.status === 200) {\r\n            yield put(setStoryLoadingStatusAC(LoadingStatus.REDACTION))\r\n        }\r\n    } catch (error) {\r\n        yield put(setStoryLoadingStatusAC(LoadingStatus.ERROR))\r\n    }\r\n}\r\n\r\n//удалить историю\r\nexport function* deleteStoryDataRequest({payload}: DeleteStoryByIdAI) {\r\n    try  {\r\n        const data: any = yield call(StoriesApi.deleteStory, payload._id)\r\n        if(data.status === 200) {\r\n            yield call(fetchStoriesRequest)\r\n            yield put(FetchUserStoriesAC(payload.userId))\r\n        }\r\n    } catch (error) {\r\n        yield put(setStoryLoadingStatusAC(LoadingStatus.ERROR))\r\n    }\r\n}\r\n\r\nexport function* storySaga() {\r\n    yield takeLatest(StoryActionsTypes.FETCH_STORY_BY_ID, fetchStoryDataRequest)\r\n    yield takeLatest(StoryActionsTypes.FETCH_EDIT_STORY_BY_ID, editStoryDataRequest)\r\n    yield takeLatest(StoryActionsTypes.DELETE_STORY_BY_ID, deleteStoryDataRequest)\r\n}\r\n\r\n","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\stories\\actionCreators.ts",["224"],"import {Action} from \"redux\";\r\nimport {LoadingStatus} from \"../../types\";\r\nimport {StoryState} from \"../story/reducer\";\r\nimport {AddFormState, NewStory, StoriesState} from \"./reducer\";\r\n\r\nexport enum StoriesActionsTypes {\r\n    FETCH_ALL_STORIES = 'stories/FETCH_ALL_STORIES',\r\n    SET_ALL_STORIES = 'stories/SET_ALL_STORIES',\r\n    FETCH_ADD_STORY = 'stories/FETCH_ADD_STORY',\r\n    SET_ADD_NEW_STORY = 'stories/SET_ADD_NEW_STORY',\r\n    SET_STORIES_LOADING_STATE = 'stories/SET_STORIES_LOADING_STATE',\r\n    SET_ADD_FORM_STATE = 'stories/SET_ADD_FORM_STATE',\r\n}\r\n\r\n//обнулить истории, установив пустой массив, и поставить статус \"загружается\"\r\n//запустить сагу для загрузки историй\r\nexport interface FetchStoriesAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.FETCH_ALL_STORIES;\r\n}\r\nexport const fetchStoriesAC = (): FetchStoriesAI => ({\r\n    type: StoriesActionsTypes.FETCH_ALL_STORIES,\r\n})\r\n//засетать все прилитевшие истории из саги в стейт\r\nexport interface SetAllStoriesAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.SET_ALL_STORIES,\r\n    payload: StoriesState['items']\r\n}\r\nexport const setAllStoriesAC = (payload: StoriesState['items']): SetAllStoriesAI => ({\r\n    type: StoriesActionsTypes.SET_ALL_STORIES,\r\n    payload\r\n})\r\n\r\n//добавление новой сторис, запуск саги, и установка статуса \"загрузка\"\r\nexport interface FetchAddStoryAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.FETCH_ADD_STORY;\r\n    payload: NewStory;\r\n}\r\nexport const fetchAddStoryAC = (payload: NewStory): FetchAddStoryAI => ({\r\n    type: StoriesActionsTypes.FETCH_ADD_STORY,\r\n    payload,\r\n});\r\n//Создать новую историю\r\nexport interface CreateNewStoryAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.SET_ADD_NEW_STORY,\r\n    payload: NewStory;\r\n}\r\nexport const createNewStoryAC = (payload: NewStory): CreateNewStoryAI => ({\r\n    type: StoriesActionsTypes.SET_ADD_NEW_STORY,\r\n    payload\r\n})\r\n\r\n//установить статус загрузки историй, к примеру ошибка в саге при загрузке\r\nexport interface SetStoriesLoadingStatusAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.SET_STORIES_LOADING_STATE;\r\n    payload: LoadingStatus;\r\n}\r\nexport const setStoriesLoadingStatusAC = (payload: LoadingStatus): SetStoriesLoadingStatusAI => ({\r\n    type: StoriesActionsTypes.SET_STORIES_LOADING_STATE,\r\n    payload,\r\n})\r\n//статус добавление истории через форму заполнения, к примеру ошибка в саге при загрузке\r\nexport interface SetAddFormStateAI extends Action<StoriesActionsTypes> {\r\n    type: StoriesActionsTypes.SET_ADD_FORM_STATE;\r\n    payload: AddFormState;\r\n}\r\nexport const setAddFormStateAC = (payload: AddFormState): SetAddFormStateAI => ({\r\n    type: StoriesActionsTypes.SET_ADD_FORM_STATE,\r\n    payload,\r\n});\r\n\r\n\r\n\r\n\r\nexport type StoriesActions =\r\n    | FetchStoriesAI\r\n    | SetAllStoriesAI\r\n    | CreateNewStoryAI\r\n    | SetStoriesLoadingStatusAI\r\n    | SetAddFormStateAI\r\n    | FetchAddStoryAI\r\n\r\n","C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\story\\actionCreators.ts",[],"C:\\APPS\\StoryApp\\client\\src\\pages\\SingIn\\index.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\pages\\Profile\\index.tsx",["225","226"],"import React, {useEffect} from \"react\"\r\nimport {useProfileStyles} from \"./ProfileStyle\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ScrollButton from \"../../componetns/ScrollButton\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    selectUserData,\r\n    selectUserDataID, selectUserDataStories,\r\n    selectUserIsAuth,\r\n    selectUserStories\r\n} from \"../../store/reducers/users/selectors\";\r\nimport {FetchUserStoriesAC} from \"../../store/reducers/users/actionCreators\";\r\nimport {ProfileInfo} from \"./ProfileInfo\";\r\nimport {ProfileStories} from \"./ProfileStories\";\r\n\r\n\r\nexport const Index = () => {\r\n    const classes = useProfileStyles();\r\n    const dispatch = useDispatch()\r\n    const userData = useSelector(selectUserData)\r\n    const userIsAuth = useSelector(selectUserIsAuth)\r\n    const stories = useSelector(selectUserStories)\r\n    const isStories = useSelector(selectUserDataStories)\r\n    useEffect(()=>{\r\n        if(userIsAuth) {\r\n            dispatch(FetchUserStoriesAC(userData._id))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <ScrollButton>\r\n            <div className={classes.wrapper}>\r\n                <Grid container spacing={2}>\r\n                   <ProfileInfo stories={stories} userData={userData}/>\r\n                   <ProfileStories stories={stories} isStories={isStories}/>\r\n                </Grid>\r\n            </div>\r\n        </ScrollButton>\r\n    )\r\n}\r\n","C:\\APPS\\StoryApp\\client\\src\\restApi\\userApi.ts",[],"C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\stories\\sagas.ts",[],"C:\\APPS\\StoryApp\\client\\src\\restApi\\storiesApi.ts",[],"C:\\APPS\\StoryApp\\client\\src\\pages\\SingIn\\components\\RegistrationModal.tsx",["227","228"],"import React from \"react\";\r\nimport {ModalBlock} from \"../../../componetns/ModalBlock\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {useStylesSignIn} from \"../theme\";\r\nimport {Notification} from \"../../../componetns/Notification\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport {FetchRegistrationAC} from \"../../../store/reducers/users/actionCreators\";\r\nimport {Color} from \"@material-ui/lab/Alert\";\r\nimport {selectUserStatus} from \"../../../store/reducers/users/selectors\";\r\nimport {LoadingStatus} from \"../../../store/types\";\r\n\r\ninterface RegisterModalProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nexport interface RegisterFormProps {\r\n    fullname: string;\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    password2: string;\r\n}\r\n\r\nconst RegisterFormSchema = yup.object().shape({\r\n    fullname: yup.string().required('Введите своё имя'),\r\n    email: yup.string().email('Неверная почта').required('Введите почту'),\r\n    username: yup.string().required('Введите логин'),\r\n    password: yup.string().min(6, '​Минимальная длина пароля 6 символов').required(),\r\n    password2: yup.string().oneOf([yup.ref('password')], 'Пароли не соответствуют'),\r\n});\r\n\r\n// сделать поля tached\r\n//После регистрации бросает сразу на главную, подумать и исправить, там еще нет ни историй, ни токена\r\n//а он положен, только верифицированным пользователям\r\n//На беке сделать переадрисацию на почтовый ящик и правильное закрытие модального окна\r\n{/*БЛОК \"РЕГИСТРАЦИИ\"*/\r\n}\r\nconst RegistrationModal: React.FC<RegisterModalProps> = ({open, onClose}): React.ReactElement => {\r\n    const classes = useStylesSignIn();\r\n    const dispatch = useDispatch();\r\n    const openNotificationRef = React.useRef<(text: string, type: Color) => void>(() => {\r\n    });\r\n    const loadingStatus = useSelector(selectUserStatus);\r\n\r\n    const {control, handleSubmit, errors} = useForm<RegisterFormProps>({\r\n        resolver: yupResolver(RegisterFormSchema)\r\n    });\r\n\r\n    const onSubmit = async (data: RegisterFormProps) => {\r\n        dispatch(FetchRegistrationAC(data));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (loadingStatus === LoadingStatus.SUCCESS) {\r\n            openNotificationRef.current('Регистрация успешна!', 'success');\r\n            onClose();\r\n        } else if (loadingStatus === LoadingStatus.ERROR) {\r\n            openNotificationRef.current('Ошибка при регистрации!', 'error');\r\n        }\r\n    }, [loadingStatus, onClose]);\r\n\r\n    return (\r\n        <ModalBlock\r\n            visible={open}\r\n            onClose={onClose}\r\n            classes={classes}\r\n            title=\"Войти в аккаунт\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <FormControl className={classes.loginFormControl} component=\"fieldset\" fullWidth>\r\n                    <FormGroup aria-label=\"position\" row>\r\n                        <Controller\r\n                            as={TextField}\r\n                            control={control}\r\n                            name=\"email\"\r\n                            className={classes.registerField}\r\n                            id=\"email\"\r\n                            label=\"E-Mail\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            type=\"email\"\r\n                            defaultValue=\"\"\r\n                            helperText={errors.email?.message}\r\n                            error={!!errors.email}\r\n                            fullWidth\r\n                            autoFocus\r\n                        />\r\n                        <Controller\r\n                            as={TextField}\r\n                            control={control}\r\n                            name=\"username\"\r\n                            className={classes.registerField}\r\n                            id=\"username\"\r\n                            label=\"Логин\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            type=\"text\"\r\n                            defaultValue=\"\"\r\n                            helperText={errors.username?.message}\r\n                            error={!!errors.username}\r\n                            fullWidth\r\n                        />\r\n                        <Controller\r\n                            as={TextField}\r\n                            control={control}\r\n                            name=\"fullname\"\r\n                            className={classes.registerField}\r\n                            id=\"fullname\"\r\n                            label=\"Ваше имя\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            type=\"text\"\r\n                            defaultValue=\"\"\r\n                            helperText={errors.fullname?.message}\r\n                            error={!!errors.fullname}\r\n                            fullWidth\r\n                        />\r\n                        <Controller\r\n                            as={TextField}\r\n                            control={control}\r\n                            name=\"password\"\r\n                            className={classes.registerField}\r\n                            id=\"password\"\r\n                            label=\"Пароль\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            type=\"password\"\r\n                            defaultValue=\"\"\r\n                            helperText={errors.password?.message}\r\n                            error={!!errors.password}\r\n                            fullWidth\r\n                        />\r\n                        <Controller\r\n                            as={TextField}\r\n                            control={control}\r\n                            name=\"password2\"\r\n                            className={classes.registerField}\r\n                            id=\"password2\"\r\n                            label=\"Пароль\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            type=\"password\"\r\n                            defaultValue=\"\"\r\n                            helperText={errors.password2?.message}\r\n                            error={!!errors.password2}\r\n                            fullWidth\r\n                        />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                            Регистрация\r\n                        </Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </ModalBlock>\r\n    )\r\n}\r\n\r\nexport default RegistrationModal","C:\\APPS\\StoryApp\\client\\src\\pages\\Profile\\ProfileStories.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\restApi\\axios.ts",[],"C:\\APPS\\StoryApp\\client\\src\\pages\\Profile\\ProfileStyle.ts",["229","230","231","232"]," // @ts-nocheck\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nexport const useProfileStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        flexGrow: 1,\r\n        // backgroundColor: 'rgba(29, 100, 100, 0.1)',\r\n        flexWrap: \"wrap\",\r\n    },\r\n    paperLeft: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        top: '20px',\r\n        position: 'sticky',\r\n        backgroundColor: 'rgba(29, 100, 100, 0.6)',\r\n        width: '14vw',\r\n        height: '45vh',\r\n        margin: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        borderRadius: '2%',\r\n        boxShadow: '0 0 10px rgba(0,0,0,0.5)',\r\n        '@media(max-width: 1700px)': {\r\n            width: '14vw',\r\n            height: '51vh',\r\n        }\r\n    },\r\n    infoWrap: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '5px 10px',\r\n        '@media(max-width: 1700px)': {\r\n            display: 'inline'\r\n        }\r\n    },\r\n    addForm: {\r\n        padding: 20,\r\n    },\r\n    addFormBody: {\r\n        display: 'flex',\r\n        width: '100%',\r\n    },\r\n    addFormBottomActions: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    storyAvatar: {\r\n        display: 'flex-start',\r\n        width: theme.spacing(6.5),\r\n        height: theme.spacing(6.5),\r\n        marginRight: 10,\r\n        '@media (max-width:1100px)': {\r\n            width: theme.spacing(4.5),\r\n            height: theme.spacing(4.5),\r\n        },\r\n        '@media (max-width:890px)': {\r\n            width: theme.spacing(3),\r\n            height: theme.spacing(3),\r\n        },\r\n        '@media (max-width:600px)': {\r\n            width: theme.spacing(3.5),\r\n            height: theme.spacing(3.5),\r\n        }\r\n    },\r\n    addFormBottomActions: {\r\n        marginTop: 10,\r\n        paddingLeft: 70,\r\n    },\r\n    addFormTextareaWrapper: {\r\n        width: '100%'\r\n    },\r\n    addFormTextareaTitle: {\r\n        width: '100%',\r\n        border: '1px solid rgba(169, 187, 184, 0.09)',\r\n        fontSize: 20,\r\n        outline: 'none',\r\n        fontFamily: 'inherit',\r\n        resize: 'none',\r\n    },\r\n    addFormTextarea: {\r\n        width: '100%',\r\n        border: 0,\r\n        fontSize: 20,\r\n        outline: 'none',\r\n        fontFamily: 'inherit',\r\n        resize: 'none',\r\n    },\r\n    addFormBottom: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    storyFooterLine: {\r\n        height: 12,\r\n        backgroundColor: '#E6ECF0',\r\n    },\r\n    addFormCircleProgress: {\r\n        position: 'relative',\r\n        width: 20,\r\n        height: 20,\r\n        margin: '0 10px',\r\n        '& .MuiCircularProgress-root': {\r\n            position: 'absolute',\r\n        },\r\n    },\r\n    addFormBottomRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    addFormBottomLine: {\r\n        height: 12,\r\n        backgroundColor: '#E6ECF0',\r\n    },\r\n    paperRight: {\r\n        position: 'relative',\r\n        padding: theme.spacing(2.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        height: '10vh',\r\n        borderLeft: '50px'\r\n    },\r\n    profileImage: {\r\n        position: \"relative\",\r\n        top: \"-10px\",\r\n        justifyContent: \"center\",\r\n        width: '220px',\r\n        height: '300px',\r\n        border: \"1px solid white\",\r\n        margin: \"auto\",\r\n        '@media(max-width: 1700px)': {\r\n            width: '110px',\r\n            height: '150px',\r\n        }\r\n\r\n    },\r\n    profileInfoContainer: {\r\n        position: \"relative\",\r\n        top: \"-10px\",\r\n        margin: \"auto\"\r\n    },\r\n    userName: {\r\n        fontSize: '15px',\r\n        fontWeight: \"bold\",\r\n        marginBottom: 0,\r\n        '@media(max-width: 1700px)': {\r\n            fontSize: '10px'\r\n        }\r\n    },\r\n    userTag: {\r\n        marginTop: 0\r\n    },\r\n    contentContainer: {\r\n        position: \"relative\",\r\n        top: \"-90px\"\r\n    },\r\n    storyCentred: {\r\n        marginTop: 50,\r\n        textAlign: 'center',\r\n    },storyWrapper: {\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n        borderRadius: 0,\r\n        height: '100%',\r\n        borderTop: '0',\r\n        borderBottom: '0',\r\n    },\r\n    storyCentred: {\r\n        marginTop: '150px',\r\n        textAlign: 'center',\r\n        marginLeft: '25vw'\r\n\r\n    },\r\n    storyHeader: {\r\n        borderTop: '0',\r\n        borderLeft: '0',\r\n        borderRight: '0',\r\n        borderRadius: 0,\r\n        padding: '10px 15px',\r\n        '& h6': {\r\n            fontWeight: 800,\r\n        },\r\n    },\r\n    storyHeaderUser: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    storyHeaderBackButton: {\r\n        marginRight: 20,\r\n    },\r\n    storyWrapperHide: {\r\n        height: '25vh',\r\n        overflow: 'hidden'\r\n    },\r\n    storyWrapper: {\r\n        height: '100%'\r\n    },\r\n    story: {\r\n        display: 'flex',\r\n        cursor: 'pointer',\r\n        paddingTop: 15,\r\n        paddingLeft: 10,\r\n        wordBreak: 'break-all',\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(245, 248, 250)',\r\n        },\r\n    },\r\n    storyFooter: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        left: -13,\r\n        maxWidth: 450,\r\n    },\r\n    storyUserName: {\r\n        color: grey[500],\r\n    },\r\n    storyCon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    },\r\n    storyHed: {\r\n        flex: 1\r\n    }\r\n}));\r\n","C:\\APPS\\StoryApp\\client\\src\\componetns\\ProfileStory.tsx",["233"],"import React, {useState} from \"react\"\r\nimport classNames from \"classnames\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport {IconButton, Menu, MenuItem, Typography} from \"@material-ui/core\"\r\nimport CommentIcon from \"@material-ui/icons/RateReview\"\r\nimport RepostIcon from \"@material-ui/icons/Repeat\"\r\nimport LikeIcon from \"@material-ui/icons/FavoriteBorderOutlined\"\r\nimport ShareIcon from \"@material-ui/icons/OpenInBrowserOutlined\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport {formatDate} from \"../utils/formatDate\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {deleteStoryByIdAC, fetchEditStoryAC} from \"../store/reducers/story/actionCreators\"\r\nimport {useProfileStyles} from \"../pages/Profile/ProfileStyle\"\r\nimport {selectUserDataID, selectUserLoadingStories} from \"../store/reducers/users/selectors\";\r\n\r\n\r\ninterface ProfileStoryProps {\r\n    _id: string\r\n    title?: string | undefined\r\n    text: string\r\n    classes: ReturnType<typeof useProfileStyles>\r\n    createdAt: string\r\n}\r\n\r\nexport const ProfileStory: React.FC<ProfileStoryProps> = ({_id, title, text, classes, createdAt }: ProfileStoryProps): React.ReactElement => {\r\n    const dispatch = useDispatch()\r\n    const userId = useSelector(selectUserDataID)\r\n    const loadingStoriesStatus = useSelector(selectUserLoadingStories)\r\n    const [show, setShow] = useState<boolean>(true)\r\n    //для доп-меню\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl)\r\n\r\n\r\n    const showHiddenText = (): void => {\r\n        setShow(!show)\r\n    }\r\n\r\n    const handleClick = (e: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(e.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleClickEdit = () => {\r\n        dispatch(fetchEditStoryAC(_id))\r\n        handleClose()\r\n    }\r\n\r\n    const handleClickDelete = () => {\r\n        dispatch(deleteStoryByIdAC({_id, userId}))\r\n        handleClose()\r\n        // dispatch(FetchUserStoriesAC(userId))\r\n    }\r\n\r\n    return (\r\n        <div className={show ? classes.storyWrapperHide : classes.storyWrapper} >\r\n            <Paper variant=\"outlined\" className={classNames(classes.story, classes.storyHeader)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <div className={classes.storyCon}>\r\n                            <div className={classes.storyHed}>\r\n                                <Typography><b>@</b>&nbsp;\r\n                                    <span className={classes.storyUserName}>Создано</span>&nbsp;\r\n                                    <span>{formatDate(new Date(createdAt))}</span>&nbsp;\r\n                                    <span className={classes.storyUserName}>назад</span>&nbsp;\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <IconButton aria-label=\"more\" aria-controls=\"long-menu\" aria-haspopup=\"true\"\r\n                                            onClick={handleClick}>\r\n                                    <MoreVertIcon/>\r\n                                </IconButton>\r\n                                <Menu id=\"long-menu\" anchorEl={anchorEl} keepMounted open={open} variant='selectedMenu'\r\n                                      onClose={handleClose}>\r\n                                    <MenuItem onClick={handleClickEdit}>\r\n                                        Редактировать\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClickDelete}>\r\n                                        Удалить\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </div>\r\n                        </div>\r\n                        <Typography variant=\"subtitle1\" align='center' gutterBottom onClick={showHiddenText}>\r\n                            {title}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" gutterBottom onClick={showHiddenText}>\r\n                            {text}\r\n                        </Typography>\r\n                        <div className={classes.storyFooter}>\r\n                            <div>\r\n                                <IconButton color='primary'>\r\n                                    <CommentIcon style={{fontSize: 20}}/>\r\n                                </IconButton>\r\n                                <span>1</span>\r\n                            </div>\r\n                            <div>\r\n                                <IconButton color='primary'>\r\n                                    <RepostIcon style={{fontSize: 20}}/>\r\n                                </IconButton>\r\n                            </div>\r\n                            <div>\r\n                                <IconButton color='primary'>\r\n                                    <LikeIcon style={{fontSize: 20}}/>\r\n                                </IconButton>\r\n                            </div>\r\n                            <div>\r\n                                <IconButton color='primary'>\r\n                                    <ShareIcon style={{fontSize: 20}}/>\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\APPS\\StoryApp\\client\\src\\componetns\\AddStoryForm.tsx",["234","235"],"C:\\APPS\\StoryApp\\client\\src\\componetns\\ModalBlock.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\stories\\selectors.ts",[],"C:\\APPS\\StoryApp\\client\\src\\store\\reducers\\story\\selectors.ts",[],"C:\\APPS\\StoryApp\\client\\src\\componetns\\addStoryStyles.ts",[],"C:\\APPS\\StoryApp\\client\\src\\utils\\formatDate.ts",[],"C:\\APPS\\StoryApp\\client\\src\\pages\\SingIn\\components\\LoginModal.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\componetns\\ScrollButton.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\pages\\Profile\\ProfileInfo.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\pages\\Home\\theme.ts",[],"C:\\APPS\\StoryApp\\client\\src\\pages\\Home\\RightSide.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\componetns\\FullStory.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\componetns\\HeaderMenu.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\componetns\\ModalMenu.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\componetns\\Story.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\componetns\\ProfileAvatar.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\componetns\\SearchTextField.tsx",[],["236","237"],"C:\\APPS\\StoryApp\\client\\src\\componetns\\BackButton.tsx",[],"C:\\APPS\\StoryApp\\client\\src\\componetns\\UploadImages.tsx",["238","239","240"],"import { IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport {ImageObj} from \"./AddStoryForm\";\r\nimport {ImageList} from \"./ImageList\";\r\nimport {useHomeStyles} from \"../pages/Home/theme\";\r\n\r\n\r\n\r\ninterface UploadImageProps {\r\n    images: ImageObj[];\r\n    onChangeImages: (callback: (prev: ImageObj[]) => ImageObj[]) => void;\r\n}\r\n\r\nexport const UploadImages: React.FC<UploadImageProps> = ({ images, onChangeImages }) => {\r\n    const classes = useHomeStyles();\r\n    const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n    const handleClickImage = () => {\r\n        if (inputRef.current) {\r\n            inputRef.current.click();\r\n        }\r\n    };\r\n\r\n    const removeImage = (url: string) => {\r\n        onChangeImages((prev) => prev.filter((obj) => obj.blobUrl !== url));\r\n    };\r\n\r\n    const handleChangeFileInput = React.useCallback((event: Event) => {\r\n        if (event.target) {\r\n            const target = event.target as HTMLInputElement;\r\n            const file = target.files?.[0];\r\n            if (file) {\r\n                const fileObj = new Blob([file]);\r\n                onChangeImages((prev) => [\r\n                    ...prev,\r\n                    {\r\n                        blobUrl: URL.createObjectURL(fileObj),\r\n                        file,\r\n                    },\r\n                ]);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (inputRef.current) {\r\n            inputRef.current.addEventListener('change', handleChangeFileInput);\r\n        }\r\n        return () => {\r\n            if (inputRef.current) {\r\n                inputRef.current.removeEventListener('change', handleChangeFileInput);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <ImageList\r\n                images={images.map((obj) => obj.blobUrl)}\r\n                classes={classes}\r\n                removeImage={removeImage}\r\n            />\r\n            <IconButton onClick={handleClickImage} color=\"primary\">\r\n                <ImageOutlinedIcon style={{ fontSize: 26 }} />\r\n            </IconButton>\r\n            <input ref={inputRef} type=\"file\" id=\"upload-input\" hidden />\r\n        </div>\r\n    );\r\n};\r\n","C:\\APPS\\StoryApp\\client\\src\\componetns\\ImageList.tsx",["241"],"import React from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport {useHomeStyles} from \"../pages/Home/theme\";\r\n\r\ninterface ImageListProps {\r\n    images: string[];\r\n    classes: ReturnType<typeof useHomeStyles>;\r\n    removeImage?: (url: string) => void;\r\n}\r\n\r\nexport const ImageList: React.FC<ImageListProps> = ({ classes, images, removeImage }) => {\r\n    if (!images.length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.imagesList}>\r\n            {images.map((url) => (\r\n                <div className={classes.imagesListItem}>\r\n                    {removeImage && (\r\n                        <IconButton\r\n                            className={classes.imagesListItemRemove}\r\n                            onClick={(): void => removeImage(url)}>\r\n                            <ClearIcon style={{ fontSize: 15 }} />\r\n                        </IconButton>\r\n                    )}\r\n                    <img key={url} src={url} />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n","C:\\APPS\\StoryApp\\client\\src\\utils\\uploadFile.ts",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":35,"column":8,"nodeType":"248","endLine":35,"endColumn":25,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":2,"column":9,"nodeType":"252","messageId":"253","endLine":2,"endColumn":13},{"ruleId":"250","severity":1,"message":"254","line":3,"column":9,"nodeType":"252","messageId":"253","endLine":3,"endColumn":21},{"ruleId":"250","severity":1,"message":"255","line":25,"column":7,"nodeType":"252","messageId":"253","endLine":25,"endColumn":11},{"ruleId":"256","severity":1,"message":"257","line":12,"column":7,"nodeType":"252","messageId":"258","endLine":12,"endColumn":31},{"ruleId":"250","severity":1,"message":"259","line":15,"column":9,"nodeType":"252","messageId":"253","endLine":15,"endColumn":32},{"ruleId":"250","severity":1,"message":"260","line":3,"column":9,"nodeType":"252","messageId":"253","endLine":3,"endColumn":19},{"ruleId":"250","severity":1,"message":"261","line":8,"column":5,"nodeType":"252","messageId":"253","endLine":8,"endColumn":21},{"ruleId":"246","severity":1,"message":"262","line":28,"column":8,"nodeType":"248","endLine":28,"endColumn":10,"suggestions":"263"},{"ruleId":"250","severity":1,"message":"264","line":8,"column":9,"nodeType":"252","messageId":"253","endLine":8,"endColumn":21},{"ruleId":"265","severity":1,"message":"266","line":43,"column":1,"nodeType":"267","messageId":"268","endLine":44,"endColumn":2},{"ruleId":"269","severity":1,"message":"270","line":15,"column":9,"nodeType":"271","messageId":"272","endLine":15,"endColumn":17},{"ruleId":"269","severity":1,"message":"273","line":67,"column":5,"nodeType":"271","messageId":"272","endLine":67,"endColumn":25},{"ruleId":"269","severity":1,"message":"274","line":174,"column":5,"nodeType":"271","messageId":"272","endLine":174,"endColumn":17},{"ruleId":"269","severity":1,"message":"275","line":201,"column":5,"nodeType":"271","messageId":"272","endLine":201,"endColumn":17},{"ruleId":"250","severity":1,"message":"276","line":29,"column":11,"nodeType":"252","messageId":"253","endLine":29,"endColumn":31},{"ruleId":"250","severity":1,"message":"277","line":9,"column":8,"nodeType":"252","messageId":"253","endLine":9,"endColumn":25},{"ruleId":"246","severity":1,"message":"278","line":59,"column":8,"nodeType":"248","endLine":59,"endColumn":15,"suggestions":"279"},{"ruleId":"242","replacedBy":"280"},{"ruleId":"244","replacedBy":"281"},{"ruleId":"246","severity":1,"message":"282","line":44,"column":8,"nodeType":"248","endLine":44,"endColumn":10,"suggestions":"283"},{"ruleId":"246","severity":1,"message":"284","line":52,"column":26,"nodeType":"252","endLine":52,"endColumn":33},{"ruleId":"246","severity":1,"message":"285","line":55,"column":8,"nodeType":"248","endLine":55,"endColumn":10,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":28,"column":21,"nodeType":"289","endLine":28,"endColumn":48},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["292"],"@typescript-eslint/no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'AddStoryForm' is defined but never used.","'data' is assigned a value but never used.","@typescript-eslint/no-redeclare","'Layout' is already defined.","redeclared","'fetchUserStoriesRequest' is defined but never used.","'StoryState' is defined but never used.","'selectUserDataID' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'userData._id', and 'userIsAuth'. Either include them or remove the dependency array.",["293"],"'Notification' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","Duplicate key 'addFormBottomActions'.","Duplicate key 'storyCentred'.","Duplicate key 'storyWrapper'.","'loadingStoriesStatus' is assigned a value but never used.","'ImageOutlinedIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'text' and 'title'. Either include them or remove the dependency array.",["294"],["290"],["291"],"React Hook React.useCallback has a missing dependency: 'onChangeImages'. Either include it or remove the dependency array. If 'onChangeImages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["295"],"The ref value 'inputRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'inputRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook React.useEffect has a missing dependency: 'handleChangeFileInput'. Either include it or remove the dependency array.",["296"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [history, isAuth, isReady]",{"range":"307","text":"308"},"Update the dependencies array to be: [dispatch, userData._id, userIsAuth]",{"range":"309","text":"310"},"Update the dependencies array to be: [story, text, title]",{"range":"311","text":"312"},"Update the dependencies array to be: [onChangeImages]",{"range":"313","text":"314"},"Update the dependencies array to be: [handleChangeFileInput]",{"range":"315","text":"316"},[1566,1583],"[history, isAuth, isReady]",[1035,1037],"[dispatch, userData._id, userIsAuth]",[2526,2533],"[story, text, title]",[1428,1430],"[onChangeImages]",[1773,1775],"[handleChangeFileInput]"]